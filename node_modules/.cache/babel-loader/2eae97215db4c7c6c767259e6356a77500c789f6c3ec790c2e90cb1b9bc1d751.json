{"ast":null,"code":"import React,{useEffect,useRef,useState,useCallback}from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MapContainer=styled.div`\n  width: 100%;\n  height: calc(100vh - 80px);\n  min-height: 600px;\n  position: relative;\n  overflow: visible;\n  background: #f0f0f0;\n`;const FallbackMap=styled.div`\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(45deg, #e5e7eb 25%, transparent 25%), \n              linear-gradient(-45deg, #e5e7eb 25%, transparent 25%), \n              linear-gradient(45deg, transparent 75%, #e5e7eb 75%), \n              linear-gradient(-45deg, transparent 75%, #e5e7eb 75%);\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #6b7280;\n  font-size: 1.2rem;\n  font-weight: 500;\n`;const MapError=styled.div`\n  text-align: center;\n  padding: 2rem;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  max-width: 400px;\n`;const GoogleMap=_ref=>{let{properties,onMarkerClick,onClusterClick,selectedMarkerId,setSelectedMarkerId,selectedClusterId,setSelectedClusterId}=_ref;const mapRef=useRef(null);const mapInstance=useRef(null);const markersRef=useRef([]);const isClusterClicking=useRef(false);const[isMapLoaded,setIsMapLoaded]=useState(false);const[mapError,setMapError]=useState(null);const[hoveredMarkerId,setHoveredMarkerId]=useState(null);// 마커 클러스터링 함수\nconst createClusterMarker=useCallback((properties,center)=>{const clusterId=properties.map(p=>p.id).join(',');const isSelected=selectedClusterId===clusterId;const isHovered=hoveredMarkerId===clusterId;const propertyCount=properties.length;// 매물 개수에 따른 클러스터 마커 크기와 색상 결정\nlet markerSize=40;let fontSize=14;let backgroundColor='#2563eb';let borderColor='#1e40af';if(propertyCount>=10){markerSize=50;fontSize=16;backgroundColor='#dc2626';// 빨간색\nborderColor='#b91c1c';}else if(propertyCount>=5){markerSize=45;fontSize=15;backgroundColor='#f59e0b';// 주황색\nborderColor='#d97706';}else if(propertyCount>=3){markerSize=42;fontSize=14;backgroundColor='#10b981';// 초록색\nborderColor='#059669';}const marker=new window.google.maps.Marker({position:center,map:mapInstance.current,icon:{url:'data:image/svg+xml;charset=UTF-8,'+encodeURIComponent(isSelected?`<svg width=\"${markerSize+4}\" height=\"${markerSize+4}\" viewBox=\"0 0 ${markerSize+4} ${markerSize+4}\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"${(markerSize+4)/2}\" cy=\"${(markerSize+4)/2}\" r=\"${markerSize/2}\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/>\n                <text x=\"${(markerSize+4)/2}\" y=\"${(markerSize+4)/2+fontSize/3}\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"${fontSize}\" font-weight=\"bold\">${propertyCount}</text>\n              </svg>`:isHovered?`<svg width=\"${markerSize+2}\" height=\"${markerSize+2}\" viewBox=\"0 0 ${markerSize+2} ${markerSize+2}\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <circle cx=\"${(markerSize+2)/2}\" cy=\"${(markerSize+2)/2}\" r=\"${markerSize/2}\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/>\n                  <text x=\"${(markerSize+2)/2}\" y=\"${(markerSize+2)/2+fontSize/3}\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"${fontSize}\" font-weight=\"bold\">${propertyCount}</text>\n                </svg>`:`<svg width=\"${markerSize}\" height=\"${markerSize}\" viewBox=\"0 0 ${markerSize} ${markerSize}\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <circle cx=\"${markerSize/2}\" cy=\"${markerSize/2}\" r=\"${markerSize/2-2}\" fill=\"${backgroundColor}\" stroke=\"${borderColor}\" stroke-width=\"3\"/>\n                  <text x=\"${markerSize/2}\" y=\"${markerSize/2+fontSize/3}\" text-anchor=\"middle\" fill=\"white\" font-family=\"Arial, sans-serif\" font-size=\"${fontSize}\" font-weight=\"bold\">${propertyCount}</text>\n                </svg>`),scaledSize:isSelected?new window.google.maps.Size(markerSize+4,markerSize+4):isHovered?new window.google.maps.Size(markerSize+2,markerSize+2):new window.google.maps.Size(markerSize,markerSize),anchor:isSelected?new window.google.maps.Point((markerSize+4)/2,(markerSize+4)/2):isHovered?new window.google.maps.Point((markerSize+2)/2,(markerSize+2)/2):new window.google.maps.Point(markerSize/2,markerSize/2)}});// 클러스터 마커 hover 이벤트\nmarker.addListener('mouseover',()=>{setHoveredMarkerId(clusterId);});marker.addListener('mouseout',()=>{setHoveredMarkerId(null);});marker.addListener('click',()=>{console.log(`클러스터 클릭: ${propertyCount}개 매물`);setHoveredMarkerId(null);// 클릭 시 hover 상태 해제\nisClusterClicking.current=true;if(propertyCount===1){if(onMarkerClick){onMarkerClick(properties[0]);}}else{if(onClusterClick){onClusterClick(properties);}}setTimeout(()=>{isClusterClicking.current=false;},1500);});return marker;},[onMarkerClick,onClusterClick,selectedClusterId,hoveredMarkerId]);// 마커 클러스터링 로직\nconst clusterMarkers=(markers,zoom)=>{const clusters=[];// 줌 레벨에 따른 클러스터 반경 설정 - 더 넓게 조정\nlet clusterRadius;if(zoom<8){clusterRadius=0.15;// 매우 넓은 범위\n}else if(zoom<10){clusterRadius=0.08;// 넓은 범위\n}else if(zoom<12){clusterRadius=0.04;// 중간 범위\n}else if(zoom<14){clusterRadius=0.02;// 좁은 범위\n}else if(zoom<16){clusterRadius=0.01;// 매우 좁은 범위\n}else if(zoom<18){clusterRadius=0.005;// 개별 마커 근처\n}else{clusterRadius=0.002;// 거의 개별 마커\n}console.log(`줌 레벨 ${zoom}, 클러스터 반경: ${clusterRadius}`);properties.forEach((property,index)=>{let addedToCluster=false;for(const cluster of clusters){const distance=Math.sqrt(Math.pow(property.location.lat-cluster.center.lat,2)+Math.pow(property.location.lng-cluster.center.lng,2));if(distance<clusterRadius){cluster.properties.push(property);// 클러스터 중심점을 매물들의 평균 위치로 업데이트\ncluster.center={lat:cluster.properties.reduce((sum,p)=>sum+p.location.lat,0)/cluster.properties.length,lng:cluster.properties.reduce((sum,p)=>sum+p.location.lng,0)/cluster.properties.length};addedToCluster=true;break;}}if(!addedToCluster){clusters.push({center:property.location,properties:[property]});}});console.log(`총 ${properties.length}개 매물이 ${clusters.length}개 클러스터로 그룹화됨`);return clusters;};// 지도 초기화\nconst initMap=useCallback(()=>{var _window$google;console.log('지도 초기화 시도...');console.log('mapRef.current:',mapRef.current);console.log('window.google:',window.google);console.log('window.google.maps:',(_window$google=window.google)===null||_window$google===void 0?void 0:_window$google.maps);if(!mapRef.current){console.log('mapRef가 없음');return false;}if(!window.google){console.log('Google Maps API가 로드되지 않음');return false;}if(!window.google.maps){console.log('Google Maps 객체가 없음');return false;}if(mapInstance.current){console.log('기존 지도 인스턴스 업데이트');updateMarkers();return true;}try{console.log('새 지도 인스턴스 생성 시작...');markersRef.current.forEach(marker=>{if(marker&&marker.setMap){marker.setMap(null);}});markersRef.current=[];const map=new window.google.maps.Map(mapRef.current,{center:{lat:37.5665,lng:126.9780},zoom:10,mapTypeId:window.google.maps.MapTypeId.ROADMAP,zoomControl:false,// 확대/축소 버튼 제거\nmapTypeControl:false,scaleControl:false,streetViewControl:false,rotateControl:false,fullscreenControl:false,gestureHandling:'greedy',backgroundColor:'#f0f0f0',disableDefaultUI:true,// 모든 기본 UI 비활성화\nclickableIcons:false,// POI 클릭 비활성화\nmaxZoom:20,minZoom:8,tilt:0,disableDoubleClickZoom:false,restriction:{latLngBounds:{north:38.0,south:34.5,east:131.0,west:125.0},strictBounds:false},styles:[{featureType:'poi',elementType:'labels',stylers:[{visibility:'off'}]},{featureType:'transit',elementType:'labels',stylers:[{visibility:'off'}]},{featureType:'landscape',elementType:'labels',stylers:[{visibility:'off'}]}]});console.log('지도 인스턴스 생성 완료:',map);mapInstance.current=map;// 지도가 완전히 로드된 후 마커 생성\nmap.addListener('idle',()=>{console.log('지도 로드 완료, 마커 생성 시작');createMarkers();});map.addListener('zoom_changed',()=>{if(isClusterClicking.current){return;}markersRef.current.forEach(marker=>{if(marker&&marker.setMap){marker.setMap(null);}});markersRef.current=[];setTimeout(()=>{if(!isClusterClicking.current){createMarkers();}},300);});console.log('지도 초기화 완료');setIsMapLoaded(true);setMapError(null);return true;}catch(error){console.error('지도 초기화 오류:',error);setMapError('지도를 로드할 수 없습니다. Google Maps API를 확인해주세요.');setIsMapLoaded(false);return false;}},[]);const createMarkers=()=>{if(!mapInstance.current){console.log('mapInstance가 없어서 마커 생성 불가');return;}console.log('마커 생성 시작, properties 개수:',properties.length);const currentZoom=mapInstance.current.getZoom()||15;console.log('현재 줌 레벨:',currentZoom);if(currentZoom>=18){console.log('개별 마커 생성 모드');properties.forEach((property,index)=>{console.log(`마커 ${index+1} 생성:`,property.title,property.location);const isSelected=selectedMarkerId===property.id;const isHovered=hoveredMarkerId===property.id;const marker=new window.google.maps.Marker({position:property.location,map:mapInstance.current,title:property.title,icon:{url:'data:image/svg+xml;charset=UTF-8,'+encodeURIComponent(isSelected?`<svg width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"22\" cy=\"22\" r=\"20\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/><text x=\"22\" y=\"29\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"16\" font-weight=\"bold\">1</text></svg>`:isHovered?`<svg width=\"34\" height=\"34\" viewBox=\"0 0 34 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"17\" cy=\"17\" r=\"15\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/><text x=\"17\" y=\"22\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"12\" font-weight=\"bold\">1</text></svg>`:`<svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"15\" cy=\"15\" r=\"13\" fill=\"#2563eb\" stroke=\"#1e40af\" stroke-width=\"2\"/><text x=\"15\" y=\"19\" text-anchor=\"middle\" fill=\"white\" font-family=\"Arial, sans-serif\" font-size=\"10\" font-weight=\"bold\">1</text></svg>`),scaledSize:isSelected?new window.google.maps.Size(44,44):isHovered?new window.google.maps.Size(34,34):new window.google.maps.Size(30,30),anchor:isSelected?new window.google.maps.Point(22,22):isHovered?new window.google.maps.Point(17,17):new window.google.maps.Point(15,15)}});// 마커 hover 이벤트\nmarker.addListener('mouseover',()=>{setHoveredMarkerId(property.id);});marker.addListener('mouseout',()=>{setHoveredMarkerId(null);});if(onMarkerClick){marker.addListener('click',()=>{console.log(`개별 마커 클릭됨: ${property.id} - ${property.title}`);setHoveredMarkerId(null);// 클릭 시 hover 상태 해제\nisClusterClicking.current=true;if(setSelectedMarkerId)setSelectedMarkerId(property.id);if(setSelectedClusterId)setSelectedClusterId('');onMarkerClick(property);setTimeout(()=>{isClusterClicking.current=false;},1500);});}markersRef.current.push(marker);});console.log('개별 마커 생성 완료, 총 마커 개수:',markersRef.current.length);}else{console.log('클러스터 모드');const clusters=clusterMarkers([],currentZoom);console.log('생성된 클러스터 개수:',clusters.length);clusters.forEach((cluster,clusterIndex)=>{console.log(`클러스터 ${clusterIndex+1}: ${cluster.properties.length}개 매물`);if(cluster.properties.length===1){const property=cluster.properties[0];const isSelected=selectedMarkerId===property.id;const isHovered=hoveredMarkerId===property.id;const marker=new window.google.maps.Marker({position:property.location,map:mapInstance.current,title:property.title,icon:{url:'data:image/svg+xml;charset=UTF-8,'+encodeURIComponent(isSelected?`<svg width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"22\" cy=\"22\" r=\"20\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/><text x=\"22\" y=\"29\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"16\" font-weight=\"bold\">1</text></svg>`:isHovered?`<svg width=\"34\" height=\"34\" viewBox=\"0 0 34 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"17\" cy=\"17\" r=\"15\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/><text x=\"17\" y=\"22\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"12\" font-weight=\"bold\">1</text></svg>`:`<svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"15\" cy=\"15\" r=\"13\" fill=\"#2563eb\" stroke=\"#1e40af\" stroke-width=\"2\"/><text x=\"15\" y=\"19\" text-anchor=\"middle\" fill=\"white\" font-family=\"Arial, sans-serif\" font-size=\"10\" font-weight=\"bold\">1</text></svg>`),scaledSize:isSelected?new window.google.maps.Size(44,44):isHovered?new window.google.maps.Size(34,34):new window.google.maps.Size(30,30),anchor:isSelected?new window.google.maps.Point(22,22):isHovered?new window.google.maps.Point(17,17):new window.google.maps.Point(15,15)}});// 마커 hover 이벤트\nmarker.addListener('mouseover',()=>{setHoveredMarkerId(property.id);});marker.addListener('mouseout',()=>{setHoveredMarkerId(null);});if(onMarkerClick){marker.addListener('click',()=>{console.log(`클러스터링된 단일 마커 클릭됨: ${property.id} - ${property.title}`);setHoveredMarkerId(null);// 클릭 시 hover 상태 해제\nisClusterClicking.current=true;if(setSelectedMarkerId)setSelectedMarkerId(property.id);if(setSelectedClusterId)setSelectedClusterId('');onMarkerClick(property);setTimeout(()=>{isClusterClicking.current=false;},1500);});}markersRef.current.push(marker);}else{const clusterMarker=createClusterMarker(cluster.properties,cluster.center);markersRef.current.push(clusterMarker);}});console.log('클러스터 마커 생성 완료, 총 마커 개수:',markersRef.current.length);}};const updateMarkers=()=>{if(!mapInstance.current)return;markersRef.current.forEach(marker=>{if(marker&&marker.setMap){marker.setMap(null);}});markersRef.current=[];createMarkers();};const checkAndInit=useCallback(()=>{console.log('Google Maps API 확인 중...');if(window.google&&window.google.maps){console.log('Google Maps API 로드됨, 지도 초기화 시도');if(initMap()){console.log('지도 초기화 성공');return;}}else{console.log('Google Maps API 아직 로드되지 않음, 재시도...');}setTimeout(checkAndInit,100);},[initMap]);useEffect(()=>{checkAndInit();return()=>{markersRef.current.forEach(marker=>{if(marker&&marker.setMap){marker.setMap(null);}});markersRef.current=[];};},[checkAndInit]);// properties가 변경될 때 마커 업데이트\nuseEffect(()=>{if(mapInstance.current&&isMapLoaded){updateMarkers();}},[properties,selectedMarkerId,selectedClusterId,hoveredMarkerId,isMapLoaded]);return/*#__PURE__*/_jsx(MapContainer,{children:!isMapLoaded&&mapError?/*#__PURE__*/_jsx(FallbackMap,{children:/*#__PURE__*/_jsxs(MapError,{children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'1rem',fontSize:'1.5rem'},children:\"\\uD83D\\uDDFA\\uFE0F\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'0.5rem',fontWeight:'bold'},children:\"\\uC9C0\\uB3C4 \\uB85C\\uB4DC \\uC2E4\\uD328\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.9rem',color:'#6b7280'},children:mapError}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setMapError(null);setIsMapLoaded(false);checkAndInit();},style:{marginTop:'1rem',padding:'0.5rem 1rem',background:'#2563eb',color:'white',border:'none',borderRadius:'4px',cursor:'pointer'},children:\"\\uB2E4\\uC2DC \\uC2DC\\uB3C4\"})]})}):/*#__PURE__*/_jsx(\"div\",{ref:mapRef,style:{width:'100%',height:'100%'}})});};export default GoogleMap;","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","styled","jsx","_jsx","jsxs","_jsxs","MapContainer","div","FallbackMap","MapError","GoogleMap","_ref","properties","onMarkerClick","onClusterClick","selectedMarkerId","setSelectedMarkerId","selectedClusterId","setSelectedClusterId","mapRef","mapInstance","markersRef","isClusterClicking","isMapLoaded","setIsMapLoaded","mapError","setMapError","hoveredMarkerId","setHoveredMarkerId","createClusterMarker","center","clusterId","map","p","id","join","isSelected","isHovered","propertyCount","length","markerSize","fontSize","backgroundColor","borderColor","marker","window","google","maps","Marker","position","current","icon","url","encodeURIComponent","scaledSize","Size","anchor","Point","addListener","console","log","setTimeout","clusterMarkers","markers","zoom","clusters","clusterRadius","forEach","property","index","addedToCluster","cluster","distance","Math","sqrt","pow","location","lat","lng","push","reduce","sum","initMap","_window$google","updateMarkers","setMap","Map","mapTypeId","MapTypeId","ROADMAP","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","gestureHandling","disableDefaultUI","clickableIcons","maxZoom","minZoom","tilt","disableDoubleClickZoom","restriction","latLngBounds","north","south","east","west","strictBounds","styles","featureType","elementType","stylers","visibility","createMarkers","error","currentZoom","getZoom","title","clusterIndex","clusterMarker","checkAndInit","children","style","marginBottom","fontWeight","color","onClick","marginTop","padding","background","border","borderRadius","cursor","ref","width","height"],"sources":["C:/Users/user/지도기반사이트만들기/src/components/GoogleMap.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Property } from '../types';\r\n\r\nconst MapContainer = styled.div`\r\n  width: 100%;\r\n  height: calc(100vh - 80px);\r\n  min-height: 600px;\r\n  position: relative;\r\n  overflow: visible;\r\n  background: #f0f0f0;\r\n`;\r\n\r\nconst FallbackMap = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(45deg, #e5e7eb 25%, transparent 25%), \r\n              linear-gradient(-45deg, #e5e7eb 25%, transparent 25%), \r\n              linear-gradient(45deg, transparent 75%, #e5e7eb 75%), \r\n              linear-gradient(-45deg, transparent 75%, #e5e7eb 75%);\r\n  background-size: 20px 20px;\r\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #6b7280;\r\n  font-size: 1.2rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst MapError = styled.div`\r\n  text-align: center;\r\n  padding: 2rem;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  max-width: 400px;\r\n`;\r\n\r\ninterface GoogleMapProps {\r\n  properties: Property[];\r\n  onMarkerClick?: (property: Property) => void;\r\n  onClusterClick?: (properties: Property[]) => void;\r\n  selectedMarkerId?: string | null;\r\n  setSelectedMarkerId?: (id: string) => void;\r\n  selectedClusterId?: string | null;\r\n  setSelectedClusterId?: (id: string) => void;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    google: any;\r\n  }\r\n}\r\n\r\nconst GoogleMap: React.FC<GoogleMapProps> = ({\r\n  properties,\r\n  onMarkerClick,\r\n  onClusterClick,\r\n  selectedMarkerId,\r\n  setSelectedMarkerId,\r\n  selectedClusterId,\r\n  setSelectedClusterId\r\n}) => {\r\n  const mapRef = useRef<HTMLDivElement>(null);\r\n  const mapInstance = useRef<google.maps.Map | null>(null);\r\n  const markersRef = useRef<google.maps.Marker[]>([]);\r\n  const isClusterClicking = useRef(false);\r\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\r\n  const [mapError, setMapError] = useState<string | null>(null);\r\n  const [hoveredMarkerId, setHoveredMarkerId] = useState<string | null>(null);\r\n\r\n  // 마커 클러스터링 함수\r\n  const createClusterMarker = useCallback((properties: Property[], center: { lat: number; lng: number }) => {\r\n    const clusterId = properties.map(p => p.id).join(',');\r\n    const isSelected = selectedClusterId === clusterId;\r\n    const isHovered = hoveredMarkerId === clusterId;\r\n    const propertyCount = properties.length;\r\n    \r\n    // 매물 개수에 따른 클러스터 마커 크기와 색상 결정\r\n    let markerSize = 40;\r\n    let fontSize = 14;\r\n    let backgroundColor = '#2563eb';\r\n    let borderColor = '#1e40af';\r\n    \r\n    if (propertyCount >= 10) {\r\n      markerSize = 50;\r\n      fontSize = 16;\r\n      backgroundColor = '#dc2626'; // 빨간색\r\n      borderColor = '#b91c1c';\r\n    } else if (propertyCount >= 5) {\r\n      markerSize = 45;\r\n      fontSize = 15;\r\n      backgroundColor = '#f59e0b'; // 주황색\r\n      borderColor = '#d97706';\r\n    } else if (propertyCount >= 3) {\r\n      markerSize = 42;\r\n      fontSize = 14;\r\n      backgroundColor = '#10b981'; // 초록색\r\n      borderColor = '#059669';\r\n    }\r\n    \r\n    const marker = new window.google.maps.Marker({\r\n      position: center,\r\n      map: mapInstance.current,\r\n      icon: {\r\n        url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(\r\n          isSelected\r\n            ? `<svg width=\"${markerSize + 4}\" height=\"${markerSize + 4}\" viewBox=\"0 0 ${markerSize + 4} ${markerSize + 4}\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <circle cx=\"${(markerSize + 4) / 2}\" cy=\"${(markerSize + 4) / 2}\" r=\"${markerSize / 2}\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/>\r\n                <text x=\"${(markerSize + 4) / 2}\" y=\"${(markerSize + 4) / 2 + fontSize / 3}\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"${fontSize}\" font-weight=\"bold\">${propertyCount}</text>\r\n              </svg>`\r\n            : isHovered\r\n              ? `<svg width=\"${markerSize + 2}\" height=\"${markerSize + 2}\" viewBox=\"0 0 ${markerSize + 2} ${markerSize + 2}\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <circle cx=\"${(markerSize + 2) / 2}\" cy=\"${(markerSize + 2) / 2}\" r=\"${markerSize / 2}\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/>\r\n                  <text x=\"${(markerSize + 2) / 2}\" y=\"${(markerSize + 2) / 2 + fontSize / 3}\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"${fontSize}\" font-weight=\"bold\">${propertyCount}</text>\r\n                </svg>`\r\n              : `<svg width=\"${markerSize}\" height=\"${markerSize}\" viewBox=\"0 0 ${markerSize} ${markerSize}\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <circle cx=\"${markerSize / 2}\" cy=\"${markerSize / 2}\" r=\"${markerSize / 2 - 2}\" fill=\"${backgroundColor}\" stroke=\"${borderColor}\" stroke-width=\"3\"/>\r\n                  <text x=\"${markerSize / 2}\" y=\"${markerSize / 2 + fontSize / 3}\" text-anchor=\"middle\" fill=\"white\" font-family=\"Arial, sans-serif\" font-size=\"${fontSize}\" font-weight=\"bold\">${propertyCount}</text>\r\n                </svg>`\r\n        ),\r\n        scaledSize: isSelected\r\n          ? new window.google.maps.Size(markerSize + 4, markerSize + 4)\r\n          : isHovered\r\n            ? new window.google.maps.Size(markerSize + 2, markerSize + 2)\r\n            : new window.google.maps.Size(markerSize, markerSize),\r\n        anchor: isSelected\r\n          ? new window.google.maps.Point((markerSize + 4) / 2, (markerSize + 4) / 2)\r\n          : isHovered\r\n            ? new window.google.maps.Point((markerSize + 2) / 2, (markerSize + 2) / 2)\r\n            : new window.google.maps.Point(markerSize / 2, markerSize / 2)\r\n      }\r\n    });\r\n\r\n    // 클러스터 마커 hover 이벤트\r\n    marker.addListener('mouseover', () => {\r\n      setHoveredMarkerId(clusterId);\r\n    });\r\n\r\n    marker.addListener('mouseout', () => {\r\n      setHoveredMarkerId(null);\r\n    });\r\n\r\n    marker.addListener('click', () => {\r\n      console.log(`클러스터 클릭: ${propertyCount}개 매물`);\r\n      setHoveredMarkerId(null); // 클릭 시 hover 상태 해제\r\n      \r\n      isClusterClicking.current = true;\r\n      \r\n      if (propertyCount === 1) {\r\n        if (onMarkerClick) {\r\n          onMarkerClick(properties[0]);\r\n        }\r\n      } else {\r\n        if (onClusterClick) {\r\n          onClusterClick(properties);\r\n        }\r\n      }\r\n      \r\n      setTimeout(() => {\r\n        isClusterClicking.current = false;\r\n      }, 1500);\r\n    });\r\n\r\n    return marker;\r\n  }, [onMarkerClick, onClusterClick, selectedClusterId, hoveredMarkerId]);\r\n\r\n  // 마커 클러스터링 로직\r\n  const clusterMarkers = (markers: any[], zoom: number) => {\r\n    const clusters: { center: { lat: number; lng: number }; properties: Property[] }[] = [];\r\n    \r\n    // 줌 레벨에 따른 클러스터 반경 설정 - 더 넓게 조정\r\n    let clusterRadius: number;\r\n    if (zoom < 8) {\r\n      clusterRadius = 0.15; // 매우 넓은 범위\r\n    } else if (zoom < 10) {\r\n      clusterRadius = 0.08; // 넓은 범위\r\n    } else if (zoom < 12) {\r\n      clusterRadius = 0.04; // 중간 범위\r\n    } else if (zoom < 14) {\r\n      clusterRadius = 0.02; // 좁은 범위\r\n    } else if (zoom < 16) {\r\n      clusterRadius = 0.01; // 매우 좁은 범위\r\n    } else if (zoom < 18) {\r\n      clusterRadius = 0.005; // 개별 마커 근처\r\n    } else {\r\n      clusterRadius = 0.002; // 거의 개별 마커\r\n    }\r\n\r\n    console.log(`줌 레벨 ${zoom}, 클러스터 반경: ${clusterRadius}`);\r\n\r\n    properties.forEach((property, index) => {\r\n      let addedToCluster = false;\r\n      \r\n      for (const cluster of clusters) {\r\n        const distance = Math.sqrt(\r\n          Math.pow(property.location.lat - cluster.center.lat, 2) +\r\n          Math.pow(property.location.lng - cluster.center.lng, 2)\r\n        );\r\n        \r\n        if (distance < clusterRadius) {\r\n          cluster.properties.push(property);\r\n          // 클러스터 중심점을 매물들의 평균 위치로 업데이트\r\n          cluster.center = {\r\n            lat: cluster.properties.reduce((sum, p) => sum + p.location.lat, 0) / cluster.properties.length,\r\n            lng: cluster.properties.reduce((sum, p) => sum + p.location.lng, 0) / cluster.properties.length\r\n          };\r\n          addedToCluster = true;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if (!addedToCluster) {\r\n        clusters.push({\r\n          center: property.location,\r\n          properties: [property]\r\n        });\r\n      }\r\n    });\r\n\r\n    console.log(`총 ${properties.length}개 매물이 ${clusters.length}개 클러스터로 그룹화됨`);\r\n    return clusters;\r\n  };\r\n\r\n  // 지도 초기화\r\n  const initMap = useCallback(() => {\r\n    console.log('지도 초기화 시도...');\r\n    console.log('mapRef.current:', mapRef.current);\r\n    console.log('window.google:', window.google);\r\n    console.log('window.google.maps:', window.google?.maps);\r\n    \r\n    if (!mapRef.current) {\r\n      console.log('mapRef가 없음');\r\n      return false;\r\n    }\r\n    \r\n    if (!window.google) {\r\n      console.log('Google Maps API가 로드되지 않음');\r\n      return false;\r\n    }\r\n    \r\n    if (!window.google.maps) {\r\n      console.log('Google Maps 객체가 없음');\r\n      return false;\r\n    }\r\n\r\n    if (mapInstance.current) {\r\n      console.log('기존 지도 인스턴스 업데이트');\r\n      updateMarkers();\r\n      return true;\r\n    }\r\n\r\n    try {\r\n      console.log('새 지도 인스턴스 생성 시작...');\r\n      markersRef.current.forEach(marker => {\r\n        if (marker && marker.setMap) {\r\n          marker.setMap(null);\r\n        }\r\n      });\r\n      markersRef.current = [];\r\n\r\n      const map = new window.google.maps.Map(mapRef.current, {\r\n        center: { lat: 37.5665, lng: 126.9780 },\r\n        zoom: 10,\r\n        mapTypeId: window.google.maps.MapTypeId.ROADMAP,\r\n        zoomControl: false, // 확대/축소 버튼 제거\r\n        mapTypeControl: false,\r\n        scaleControl: false,\r\n        streetViewControl: false,\r\n        rotateControl: false,\r\n        fullscreenControl: false,\r\n        gestureHandling: 'greedy',\r\n        backgroundColor: '#f0f0f0',\r\n        disableDefaultUI: true, // 모든 기본 UI 비활성화\r\n        clickableIcons: false, // POI 클릭 비활성화\r\n        maxZoom: 20,\r\n        minZoom: 8,\r\n        tilt: 0,\r\n        disableDoubleClickZoom: false,\r\n        restriction: {\r\n          latLngBounds: {\r\n            north: 38.0,\r\n            south: 34.5,\r\n            east: 131.0,\r\n            west: 125.0\r\n          },\r\n          strictBounds: false\r\n        },\r\n        styles: [\r\n          {\r\n            featureType: 'poi',\r\n            elementType: 'labels',\r\n            stylers: [{ visibility: 'off' }]\r\n          },\r\n          {\r\n            featureType: 'transit',\r\n            elementType: 'labels',\r\n            stylers: [{ visibility: 'off' }]\r\n          },\r\n          {\r\n            featureType: 'landscape',\r\n            elementType: 'labels',\r\n            stylers: [{ visibility: 'off' }]\r\n          }\r\n        ]\r\n      });\r\n\r\n      console.log('지도 인스턴스 생성 완료:', map);\r\n      mapInstance.current = map;\r\n      \r\n      // 지도가 완전히 로드된 후 마커 생성\r\n      map.addListener('idle', () => {\r\n        console.log('지도 로드 완료, 마커 생성 시작');\r\n        createMarkers();\r\n      });\r\n\r\n      map.addListener('zoom_changed', () => {\r\n        if (isClusterClicking.current) {\r\n          return;\r\n        }\r\n        \r\n        markersRef.current.forEach(marker => {\r\n          if (marker && marker.setMap) {\r\n            marker.setMap(null);\r\n          }\r\n        });\r\n        markersRef.current = [];\r\n\r\n        setTimeout(() => {\r\n          if (!isClusterClicking.current) {\r\n            createMarkers();\r\n          }\r\n        }, 300);\r\n      });\r\n\r\n      console.log('지도 초기화 완료');\r\n      setIsMapLoaded(true);\r\n      setMapError(null);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('지도 초기화 오류:', error);\r\n      setMapError('지도를 로드할 수 없습니다. Google Maps API를 확인해주세요.');\r\n      setIsMapLoaded(false);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  const createMarkers = () => {\r\n    if (!mapInstance.current) {\r\n      console.log('mapInstance가 없어서 마커 생성 불가');\r\n      return;\r\n    }\r\n    \r\n    console.log('마커 생성 시작, properties 개수:', properties.length);\r\n    const currentZoom = mapInstance.current.getZoom() || 15;\r\n    console.log('현재 줌 레벨:', currentZoom);\r\n    \r\n    if (currentZoom >= 18) {\r\n      console.log('개별 마커 생성 모드');\r\n      properties.forEach((property, index) => {\r\n        console.log(`마커 ${index + 1} 생성:`, property.title, property.location);\r\n        const isSelected = selectedMarkerId === property.id;\r\n        const isHovered = hoveredMarkerId === property.id;\r\n        const marker = new window.google.maps.Marker({\r\n          position: property.location,\r\n          map: mapInstance.current,\r\n          title: property.title,\r\n          icon: {\r\n            url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(\r\n              isSelected\r\n                ? `<svg width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"22\" cy=\"22\" r=\"20\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/><text x=\"22\" y=\"29\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"16\" font-weight=\"bold\">1</text></svg>`\r\n                : isHovered\r\n                  ? `<svg width=\"34\" height=\"34\" viewBox=\"0 0 34 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"17\" cy=\"17\" r=\"15\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/><text x=\"17\" y=\"22\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"12\" font-weight=\"bold\">1</text></svg>`\r\n                  : `<svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"15\" cy=\"15\" r=\"13\" fill=\"#2563eb\" stroke=\"#1e40af\" stroke-width=\"2\"/><text x=\"15\" y=\"19\" text-anchor=\"middle\" fill=\"white\" font-family=\"Arial, sans-serif\" font-size=\"10\" font-weight=\"bold\">1</text></svg>`\r\n            ),\r\n            scaledSize: isSelected\r\n              ? new window.google.maps.Size(44, 44)\r\n              : isHovered\r\n                ? new window.google.maps.Size(34, 34)\r\n                : new window.google.maps.Size(30, 30),\r\n            anchor: isSelected\r\n              ? new window.google.maps.Point(22, 22)\r\n              : isHovered\r\n                ? new window.google.maps.Point(17, 17)\r\n                : new window.google.maps.Point(15, 15)\r\n          }\r\n        });\r\n\r\n        // 마커 hover 이벤트\r\n        marker.addListener('mouseover', () => {\r\n          setHoveredMarkerId(property.id);\r\n        });\r\n\r\n        marker.addListener('mouseout', () => {\r\n          setHoveredMarkerId(null);\r\n        });\r\n\r\n        if (onMarkerClick) {\r\n          marker.addListener('click', () => {\r\n            console.log(`개별 마커 클릭됨: ${property.id} - ${property.title}`);\r\n            setHoveredMarkerId(null); // 클릭 시 hover 상태 해제\r\n            isClusterClicking.current = true;\r\n            \r\n            if (setSelectedMarkerId) setSelectedMarkerId(property.id);\r\n            if (setSelectedClusterId) setSelectedClusterId('');\r\n            onMarkerClick(property);\r\n            \r\n            setTimeout(() => {\r\n              isClusterClicking.current = false;\r\n            }, 1500);\r\n          });\r\n        }\r\n\r\n        markersRef.current.push(marker);\r\n      });\r\n      console.log('개별 마커 생성 완료, 총 마커 개수:', markersRef.current.length);\r\n    } else {\r\n      console.log('클러스터 모드');\r\n      const clusters = clusterMarkers([], currentZoom);\r\n      console.log('생성된 클러스터 개수:', clusters.length);\r\n\r\n      clusters.forEach((cluster, clusterIndex) => {\r\n        console.log(`클러스터 ${clusterIndex + 1}: ${cluster.properties.length}개 매물`);\r\n        if (cluster.properties.length === 1) {\r\n          const property = cluster.properties[0];\r\n          const isSelected = selectedMarkerId === property.id;\r\n          const isHovered = hoveredMarkerId === property.id;\r\n          const marker = new window.google.maps.Marker({\r\n            position: property.location,\r\n            map: mapInstance.current,\r\n            title: property.title,\r\n            icon: {\r\n              url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(\r\n                isSelected\r\n                  ? `<svg width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"22\" cy=\"22\" r=\"20\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/><text x=\"22\" y=\"29\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"16\" font-weight=\"bold\">1</text></svg>`\r\n                  : isHovered\r\n                    ? `<svg width=\"34\" height=\"34\" viewBox=\"0 0 34 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"17\" cy=\"17\" r=\"15\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/><text x=\"17\" y=\"22\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"12\" font-weight=\"bold\">1</text></svg>`\r\n                    : `<svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"15\" cy=\"15\" r=\"13\" fill=\"#2563eb\" stroke=\"#1e40af\" stroke-width=\"2\"/><text x=\"15\" y=\"19\" text-anchor=\"middle\" fill=\"white\" font-family=\"Arial, sans-serif\" font-size=\"10\" font-weight=\"bold\">1</text></svg>`\r\n              ),\r\n              scaledSize: isSelected\r\n                ? new window.google.maps.Size(44, 44)\r\n                : isHovered\r\n                  ? new window.google.maps.Size(34, 34)\r\n                  : new window.google.maps.Size(30, 30),\r\n              anchor: isSelected\r\n                ? new window.google.maps.Point(22, 22)\r\n                : isHovered\r\n                  ? new window.google.maps.Point(17, 17)\r\n                  : new window.google.maps.Point(15, 15)\r\n            }\r\n          });\r\n\r\n          // 마커 hover 이벤트\r\n          marker.addListener('mouseover', () => {\r\n            setHoveredMarkerId(property.id);\r\n          });\r\n\r\n          marker.addListener('mouseout', () => {\r\n            setHoveredMarkerId(null);\r\n          });\r\n\r\n          if (onMarkerClick) {\r\n            marker.addListener('click', () => {\r\n              console.log(`클러스터링된 단일 마커 클릭됨: ${property.id} - ${property.title}`);\r\n              setHoveredMarkerId(null); // 클릭 시 hover 상태 해제\r\n              isClusterClicking.current = true;\r\n              \r\n              if (setSelectedMarkerId) setSelectedMarkerId(property.id);\r\n              if (setSelectedClusterId) setSelectedClusterId('');\r\n              onMarkerClick(property);\r\n              \r\n              setTimeout(() => {\r\n                isClusterClicking.current = false;\r\n              }, 1500);\r\n            });\r\n          }\r\n\r\n          markersRef.current.push(marker);\r\n        } else {\r\n          const clusterMarker = createClusterMarker(cluster.properties, cluster.center);\r\n          markersRef.current.push(clusterMarker);\r\n        }\r\n      });\r\n      console.log('클러스터 마커 생성 완료, 총 마커 개수:', markersRef.current.length);\r\n    }\r\n  };\r\n\r\n  const updateMarkers = () => {\r\n    if (!mapInstance.current) return;\r\n    \r\n    markersRef.current.forEach(marker => {\r\n      if (marker && marker.setMap) {\r\n        marker.setMap(null);\r\n      }\r\n    });\r\n    markersRef.current = [];\r\n\r\n    createMarkers();\r\n  };\r\n\r\n  const checkAndInit = useCallback(() => {\r\n    console.log('Google Maps API 확인 중...');\r\n    if (window.google && window.google.maps) {\r\n      console.log('Google Maps API 로드됨, 지도 초기화 시도');\r\n      if (initMap()) {\r\n        console.log('지도 초기화 성공');\r\n        return;\r\n      }\r\n    } else {\r\n      console.log('Google Maps API 아직 로드되지 않음, 재시도...');\r\n    }\r\n    \r\n    setTimeout(checkAndInit, 100);\r\n  }, [initMap]);\r\n\r\n  useEffect(() => {\r\n    checkAndInit();\r\n\r\n    return () => {\r\n      markersRef.current.forEach(marker => {\r\n        if (marker && marker.setMap) {\r\n          marker.setMap(null);\r\n        }\r\n      });\r\n      markersRef.current = [];\r\n    };\r\n  }, [checkAndInit]);\r\n\r\n  // properties가 변경될 때 마커 업데이트\r\n  useEffect(() => {\r\n    if (mapInstance.current && isMapLoaded) {\r\n      updateMarkers();\r\n    }\r\n  }, [properties, selectedMarkerId, selectedClusterId, hoveredMarkerId, isMapLoaded]);\r\n\r\n  return (\r\n    <MapContainer>\r\n      {!isMapLoaded && mapError ? (\r\n        <FallbackMap>\r\n          <MapError>\r\n            <div style={{ marginBottom: '1rem', fontSize: '1.5rem' }}>🗺️</div>\r\n            <div style={{ marginBottom: '0.5rem', fontWeight: 'bold' }}>지도 로드 실패</div>\r\n            <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>{mapError}</div>\r\n            <button \r\n              onClick={() => {\r\n                setMapError(null);\r\n                setIsMapLoaded(false);\r\n                checkAndInit();\r\n              }}\r\n              style={{\r\n                marginTop: '1rem',\r\n                padding: '0.5rem 1rem',\r\n                background: '#2563eb',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '4px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              다시 시도\r\n            </button>\r\n          </MapError>\r\n        </FallbackMap>\r\n      ) : (\r\n        <div ref={mapRef} style={{ width: '100%', height: '100%' }} />\r\n      )}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default GoogleMap; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CACvE,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGvC,KAAM,CAAAC,YAAY,CAAGL,MAAM,CAACM,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGP,MAAM,CAACM,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAE,QAAQ,CAAGR,MAAM,CAACM,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAkBD,KAAM,CAAAG,SAAmC,CAAGC,IAAA,EAQtC,IARuC,CAC3CC,UAAU,CACVC,aAAa,CACbC,cAAc,CACdC,gBAAgB,CAChBC,mBAAmB,CACnBC,iBAAiB,CACjBC,oBACF,CAAC,CAAAP,IAAA,CACC,KAAM,CAAAQ,MAAM,CAAGrB,MAAM,CAAiB,IAAI,CAAC,CAC3C,KAAM,CAAAsB,WAAW,CAAGtB,MAAM,CAAyB,IAAI,CAAC,CACxD,KAAM,CAAAuB,UAAU,CAAGvB,MAAM,CAAuB,EAAE,CAAC,CACnD,KAAM,CAAAwB,iBAAiB,CAAGxB,MAAM,CAAC,KAAK,CAAC,CACvC,KAAM,CAACyB,WAAW,CAAEC,cAAc,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAAC0B,QAAQ,CAAEC,WAAW,CAAC,CAAG3B,QAAQ,CAAgB,IAAI,CAAC,CAC7D,KAAM,CAAC4B,eAAe,CAAEC,kBAAkB,CAAC,CAAG7B,QAAQ,CAAgB,IAAI,CAAC,CAE3E;AACA,KAAM,CAAA8B,mBAAmB,CAAG7B,WAAW,CAAC,CAACY,UAAsB,CAAEkB,MAAoC,GAAK,CACxG,KAAM,CAAAC,SAAS,CAAGnB,UAAU,CAACoB,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACC,EAAE,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CACrD,KAAM,CAAAC,UAAU,CAAGnB,iBAAiB,GAAKc,SAAS,CAClD,KAAM,CAAAM,SAAS,CAAGV,eAAe,GAAKI,SAAS,CAC/C,KAAM,CAAAO,aAAa,CAAG1B,UAAU,CAAC2B,MAAM,CAEvC;AACA,GAAI,CAAAC,UAAU,CAAG,EAAE,CACnB,GAAI,CAAAC,QAAQ,CAAG,EAAE,CACjB,GAAI,CAAAC,eAAe,CAAG,SAAS,CAC/B,GAAI,CAAAC,WAAW,CAAG,SAAS,CAE3B,GAAIL,aAAa,EAAI,EAAE,CAAE,CACvBE,UAAU,CAAG,EAAE,CACfC,QAAQ,CAAG,EAAE,CACbC,eAAe,CAAG,SAAS,CAAE;AAC7BC,WAAW,CAAG,SAAS,CACzB,CAAC,IAAM,IAAIL,aAAa,EAAI,CAAC,CAAE,CAC7BE,UAAU,CAAG,EAAE,CACfC,QAAQ,CAAG,EAAE,CACbC,eAAe,CAAG,SAAS,CAAE;AAC7BC,WAAW,CAAG,SAAS,CACzB,CAAC,IAAM,IAAIL,aAAa,EAAI,CAAC,CAAE,CAC7BE,UAAU,CAAG,EAAE,CACfC,QAAQ,CAAG,EAAE,CACbC,eAAe,CAAG,SAAS,CAAE;AAC7BC,WAAW,CAAG,SAAS,CACzB,CAEA,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC,CAC3CC,QAAQ,CAAEnB,MAAM,CAChBE,GAAG,CAAEZ,WAAW,CAAC8B,OAAO,CACxBC,IAAI,CAAE,CACJC,GAAG,CAAE,mCAAmC,CAAGC,kBAAkB,CAC3DjB,UAAU,CACN,eAAeI,UAAU,CAAG,CAAC,aAAaA,UAAU,CAAG,CAAC,kBAAkBA,UAAU,CAAG,CAAC,IAAIA,UAAU,CAAG,CAAC;AACxH,8BAA8B,CAACA,UAAU,CAAG,CAAC,EAAI,CAAC,SAAS,CAACA,UAAU,CAAG,CAAC,EAAI,CAAC,QAAQA,UAAU,CAAG,CAAC;AACrG,2BAA2B,CAACA,UAAU,CAAG,CAAC,EAAI,CAAC,QAAQ,CAACA,UAAU,CAAG,CAAC,EAAI,CAAC,CAAGC,QAAQ,CAAG,CAAC,iFAAiFA,QAAQ,wBAAwBH,aAAa;AACxN,qBAAqB,CACPD,SAAS,CACP,eAAeG,UAAU,CAAG,CAAC,aAAaA,UAAU,CAAG,CAAC,kBAAkBA,UAAU,CAAG,CAAC,IAAIA,UAAU,CAAG,CAAC;AAC1H,gCAAgC,CAACA,UAAU,CAAG,CAAC,EAAI,CAAC,SAAS,CAACA,UAAU,CAAG,CAAC,EAAI,CAAC,QAAQA,UAAU,CAAG,CAAC;AACvG,6BAA6B,CAACA,UAAU,CAAG,CAAC,EAAI,CAAC,QAAQ,CAACA,UAAU,CAAG,CAAC,EAAI,CAAC,CAAGC,QAAQ,CAAG,CAAC,iFAAiFA,QAAQ,wBAAwBH,aAAa;AAC1N,uBAAuB,CACP,eAAeE,UAAU,aAAaA,UAAU,kBAAkBA,UAAU,IAAIA,UAAU;AAC1G,gCAAgCA,UAAU,CAAG,CAAC,SAASA,UAAU,CAAG,CAAC,QAAQA,UAAU,CAAG,CAAC,CAAG,CAAC,WAAWE,eAAe,aAAaC,WAAW;AACjJ,6BAA6BH,UAAU,CAAG,CAAC,QAAQA,UAAU,CAAG,CAAC,CAAGC,QAAQ,CAAG,CAAC,kFAAkFA,QAAQ,wBAAwBH,aAAa;AAC/M,uBACQ,CAAC,CACDgB,UAAU,CAAElB,UAAU,CAClB,GAAI,CAAAS,MAAM,CAACC,MAAM,CAACC,IAAI,CAACQ,IAAI,CAACf,UAAU,CAAG,CAAC,CAAEA,UAAU,CAAG,CAAC,CAAC,CAC3DH,SAAS,CACP,GAAI,CAAAQ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACQ,IAAI,CAACf,UAAU,CAAG,CAAC,CAAEA,UAAU,CAAG,CAAC,CAAC,CAC3D,GAAI,CAAAK,MAAM,CAACC,MAAM,CAACC,IAAI,CAACQ,IAAI,CAACf,UAAU,CAAEA,UAAU,CAAC,CACzDgB,MAAM,CAAEpB,UAAU,CACd,GAAI,CAAAS,MAAM,CAACC,MAAM,CAACC,IAAI,CAACU,KAAK,CAAC,CAACjB,UAAU,CAAG,CAAC,EAAI,CAAC,CAAE,CAACA,UAAU,CAAG,CAAC,EAAI,CAAC,CAAC,CACxEH,SAAS,CACP,GAAI,CAAAQ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACU,KAAK,CAAC,CAACjB,UAAU,CAAG,CAAC,EAAI,CAAC,CAAE,CAACA,UAAU,CAAG,CAAC,EAAI,CAAC,CAAC,CACxE,GAAI,CAAAK,MAAM,CAACC,MAAM,CAACC,IAAI,CAACU,KAAK,CAACjB,UAAU,CAAG,CAAC,CAAEA,UAAU,CAAG,CAAC,CACnE,CACF,CAAC,CAAC,CAEF;AACAI,MAAM,CAACc,WAAW,CAAC,WAAW,CAAE,IAAM,CACpC9B,kBAAkB,CAACG,SAAS,CAAC,CAC/B,CAAC,CAAC,CAEFa,MAAM,CAACc,WAAW,CAAC,UAAU,CAAE,IAAM,CACnC9B,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,CAAC,CAEFgB,MAAM,CAACc,WAAW,CAAC,OAAO,CAAE,IAAM,CAChCC,OAAO,CAACC,GAAG,CAAC,YAAYtB,aAAa,MAAM,CAAC,CAC5CV,kBAAkB,CAAC,IAAI,CAAC,CAAE;AAE1BN,iBAAiB,CAAC4B,OAAO,CAAG,IAAI,CAEhC,GAAIZ,aAAa,GAAK,CAAC,CAAE,CACvB,GAAIzB,aAAa,CAAE,CACjBA,aAAa,CAACD,UAAU,CAAC,CAAC,CAAC,CAAC,CAC9B,CACF,CAAC,IAAM,CACL,GAAIE,cAAc,CAAE,CAClBA,cAAc,CAACF,UAAU,CAAC,CAC5B,CACF,CAEAiD,UAAU,CAAC,IAAM,CACfvC,iBAAiB,CAAC4B,OAAO,CAAG,KAAK,CACnC,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAC,CAEF,MAAO,CAAAN,MAAM,CACf,CAAC,CAAE,CAAC/B,aAAa,CAAEC,cAAc,CAAEG,iBAAiB,CAAEU,eAAe,CAAC,CAAC,CAEvE;AACA,KAAM,CAAAmC,cAAc,CAAGA,CAACC,OAAc,CAAEC,IAAY,GAAK,CACvD,KAAM,CAAAC,QAA4E,CAAG,EAAE,CAEvF;AACA,GAAI,CAAAC,aAAqB,CACzB,GAAIF,IAAI,CAAG,CAAC,CAAE,CACZE,aAAa,CAAG,IAAI,CAAE;AACxB,CAAC,IAAM,IAAIF,IAAI,CAAG,EAAE,CAAE,CACpBE,aAAa,CAAG,IAAI,CAAE;AACxB,CAAC,IAAM,IAAIF,IAAI,CAAG,EAAE,CAAE,CACpBE,aAAa,CAAG,IAAI,CAAE;AACxB,CAAC,IAAM,IAAIF,IAAI,CAAG,EAAE,CAAE,CACpBE,aAAa,CAAG,IAAI,CAAE;AACxB,CAAC,IAAM,IAAIF,IAAI,CAAG,EAAE,CAAE,CACpBE,aAAa,CAAG,IAAI,CAAE;AACxB,CAAC,IAAM,IAAIF,IAAI,CAAG,EAAE,CAAE,CACpBE,aAAa,CAAG,KAAK,CAAE;AACzB,CAAC,IAAM,CACLA,aAAa,CAAG,KAAK,CAAE;AACzB,CAEAP,OAAO,CAACC,GAAG,CAAC,QAAQI,IAAI,cAAcE,aAAa,EAAE,CAAC,CAEtDtD,UAAU,CAACuD,OAAO,CAAC,CAACC,QAAQ,CAAEC,KAAK,GAAK,CACtC,GAAI,CAAAC,cAAc,CAAG,KAAK,CAE1B,IAAK,KAAM,CAAAC,OAAO,GAAI,CAAAN,QAAQ,CAAE,CAC9B,KAAM,CAAAO,QAAQ,CAAGC,IAAI,CAACC,IAAI,CACxBD,IAAI,CAACE,GAAG,CAACP,QAAQ,CAACQ,QAAQ,CAACC,GAAG,CAAGN,OAAO,CAACzC,MAAM,CAAC+C,GAAG,CAAE,CAAC,CAAC,CACvDJ,IAAI,CAACE,GAAG,CAACP,QAAQ,CAACQ,QAAQ,CAACE,GAAG,CAAGP,OAAO,CAACzC,MAAM,CAACgD,GAAG,CAAE,CAAC,CACxD,CAAC,CAED,GAAIN,QAAQ,CAAGN,aAAa,CAAE,CAC5BK,OAAO,CAAC3D,UAAU,CAACmE,IAAI,CAACX,QAAQ,CAAC,CACjC;AACAG,OAAO,CAACzC,MAAM,CAAG,CACf+C,GAAG,CAAEN,OAAO,CAAC3D,UAAU,CAACoE,MAAM,CAAC,CAACC,GAAG,CAAEhD,CAAC,GAAKgD,GAAG,CAAGhD,CAAC,CAAC2C,QAAQ,CAACC,GAAG,CAAE,CAAC,CAAC,CAAGN,OAAO,CAAC3D,UAAU,CAAC2B,MAAM,CAC/FuC,GAAG,CAAEP,OAAO,CAAC3D,UAAU,CAACoE,MAAM,CAAC,CAACC,GAAG,CAAEhD,CAAC,GAAKgD,GAAG,CAAGhD,CAAC,CAAC2C,QAAQ,CAACE,GAAG,CAAE,CAAC,CAAC,CAAGP,OAAO,CAAC3D,UAAU,CAAC2B,MAC3F,CAAC,CACD+B,cAAc,CAAG,IAAI,CACrB,MACF,CACF,CAEA,GAAI,CAACA,cAAc,CAAE,CACnBL,QAAQ,CAACc,IAAI,CAAC,CACZjD,MAAM,CAAEsC,QAAQ,CAACQ,QAAQ,CACzBhE,UAAU,CAAE,CAACwD,QAAQ,CACvB,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEFT,OAAO,CAACC,GAAG,CAAC,KAAKhD,UAAU,CAAC2B,MAAM,SAAS0B,QAAQ,CAAC1B,MAAM,cAAc,CAAC,CACzE,MAAO,CAAA0B,QAAQ,CACjB,CAAC,CAED;AACA,KAAM,CAAAiB,OAAO,CAAGlF,WAAW,CAAC,IAAM,KAAAmF,cAAA,CAChCxB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC3BD,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEzC,MAAM,CAAC+B,OAAO,CAAC,CAC9CS,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEf,MAAM,CAACC,MAAM,CAAC,CAC5Ca,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAAuB,cAAA,CAAEtC,MAAM,CAACC,MAAM,UAAAqC,cAAA,iBAAbA,cAAA,CAAepC,IAAI,CAAC,CAEvD,GAAI,CAAC5B,MAAM,CAAC+B,OAAO,CAAE,CACnBS,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,CACzB,MAAO,MAAK,CACd,CAEA,GAAI,CAACf,MAAM,CAACC,MAAM,CAAE,CAClBa,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACvC,MAAO,MAAK,CACd,CAEA,GAAI,CAACf,MAAM,CAACC,MAAM,CAACC,IAAI,CAAE,CACvBY,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CACjC,MAAO,MAAK,CACd,CAEA,GAAIxC,WAAW,CAAC8B,OAAO,CAAE,CACvBS,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAC9BwB,aAAa,CAAC,CAAC,CACf,MAAO,KAAI,CACb,CAEA,GAAI,CACFzB,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CACjCvC,UAAU,CAAC6B,OAAO,CAACiB,OAAO,CAACvB,MAAM,EAAI,CACnC,GAAIA,MAAM,EAAIA,MAAM,CAACyC,MAAM,CAAE,CAC3BzC,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC,CACrB,CACF,CAAC,CAAC,CACFhE,UAAU,CAAC6B,OAAO,CAAG,EAAE,CAEvB,KAAM,CAAAlB,GAAG,CAAG,GAAI,CAAAa,MAAM,CAACC,MAAM,CAACC,IAAI,CAACuC,GAAG,CAACnE,MAAM,CAAC+B,OAAO,CAAE,CACrDpB,MAAM,CAAE,CAAE+C,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,QAAS,CAAC,CACvCd,IAAI,CAAE,EAAE,CACRuB,SAAS,CAAE1C,MAAM,CAACC,MAAM,CAACC,IAAI,CAACyC,SAAS,CAACC,OAAO,CAC/CC,WAAW,CAAE,KAAK,CAAE;AACpBC,cAAc,CAAE,KAAK,CACrBC,YAAY,CAAE,KAAK,CACnBC,iBAAiB,CAAE,KAAK,CACxBC,aAAa,CAAE,KAAK,CACpBC,iBAAiB,CAAE,KAAK,CACxBC,eAAe,CAAE,QAAQ,CACzBtD,eAAe,CAAE,SAAS,CAC1BuD,gBAAgB,CAAE,IAAI,CAAE;AACxBC,cAAc,CAAE,KAAK,CAAE;AACvBC,OAAO,CAAE,EAAE,CACXC,OAAO,CAAE,CAAC,CACVC,IAAI,CAAE,CAAC,CACPC,sBAAsB,CAAE,KAAK,CAC7BC,WAAW,CAAE,CACXC,YAAY,CAAE,CACZC,KAAK,CAAE,IAAI,CACXC,KAAK,CAAE,IAAI,CACXC,IAAI,CAAE,KAAK,CACXC,IAAI,CAAE,KACR,CAAC,CACDC,YAAY,CAAE,KAChB,CAAC,CACDC,MAAM,CAAE,CACN,CACEC,WAAW,CAAE,KAAK,CAClBC,WAAW,CAAE,QAAQ,CACrBC,OAAO,CAAE,CAAC,CAAEC,UAAU,CAAE,KAAM,CAAC,CACjC,CAAC,CACD,CACEH,WAAW,CAAE,SAAS,CACtBC,WAAW,CAAE,QAAQ,CACrBC,OAAO,CAAE,CAAC,CAAEC,UAAU,CAAE,KAAM,CAAC,CACjC,CAAC,CACD,CACEH,WAAW,CAAE,WAAW,CACxBC,WAAW,CAAE,QAAQ,CACrBC,OAAO,CAAE,CAAC,CAAEC,UAAU,CAAE,KAAM,CAAC,CACjC,CAAC,CAEL,CAAC,CAAC,CAEFvD,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAE5B,GAAG,CAAC,CAClCZ,WAAW,CAAC8B,OAAO,CAAGlB,GAAG,CAEzB;AACAA,GAAG,CAAC0B,WAAW,CAAC,MAAM,CAAE,IAAM,CAC5BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CACjCuD,aAAa,CAAC,CAAC,CACjB,CAAC,CAAC,CAEFnF,GAAG,CAAC0B,WAAW,CAAC,cAAc,CAAE,IAAM,CACpC,GAAIpC,iBAAiB,CAAC4B,OAAO,CAAE,CAC7B,OACF,CAEA7B,UAAU,CAAC6B,OAAO,CAACiB,OAAO,CAACvB,MAAM,EAAI,CACnC,GAAIA,MAAM,EAAIA,MAAM,CAACyC,MAAM,CAAE,CAC3BzC,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC,CACrB,CACF,CAAC,CAAC,CACFhE,UAAU,CAAC6B,OAAO,CAAG,EAAE,CAEvBW,UAAU,CAAC,IAAM,CACf,GAAI,CAACvC,iBAAiB,CAAC4B,OAAO,CAAE,CAC9BiE,aAAa,CAAC,CAAC,CACjB,CACF,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,CAAC,CAEFxD,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,CACxBpC,cAAc,CAAC,IAAI,CAAC,CACpBE,WAAW,CAAC,IAAI,CAAC,CACjB,MAAO,KAAI,CACb,CAAE,MAAO0F,KAAK,CAAE,CACdzD,OAAO,CAACyD,KAAK,CAAC,YAAY,CAAEA,KAAK,CAAC,CAClC1F,WAAW,CAAC,0CAA0C,CAAC,CACvDF,cAAc,CAAC,KAAK,CAAC,CACrB,MAAO,MAAK,CACd,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAA2F,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAI,CAAC/F,WAAW,CAAC8B,OAAO,CAAE,CACxBS,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CACxC,OACF,CAEAD,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEhD,UAAU,CAAC2B,MAAM,CAAC,CAC1D,KAAM,CAAA8E,WAAW,CAAGjG,WAAW,CAAC8B,OAAO,CAACoE,OAAO,CAAC,CAAC,EAAI,EAAE,CACvD3D,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEyD,WAAW,CAAC,CAEpC,GAAIA,WAAW,EAAI,EAAE,CAAE,CACrB1D,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1BhD,UAAU,CAACuD,OAAO,CAAC,CAACC,QAAQ,CAAEC,KAAK,GAAK,CACtCV,OAAO,CAACC,GAAG,CAAC,MAAMS,KAAK,CAAG,CAAC,MAAM,CAAED,QAAQ,CAACmD,KAAK,CAAEnD,QAAQ,CAACQ,QAAQ,CAAC,CACrE,KAAM,CAAAxC,UAAU,CAAGrB,gBAAgB,GAAKqD,QAAQ,CAAClC,EAAE,CACnD,KAAM,CAAAG,SAAS,CAAGV,eAAe,GAAKyC,QAAQ,CAAClC,EAAE,CACjD,KAAM,CAAAU,MAAM,CAAG,GAAI,CAAAC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC,CAC3CC,QAAQ,CAAEmB,QAAQ,CAACQ,QAAQ,CAC3B5C,GAAG,CAAEZ,WAAW,CAAC8B,OAAO,CACxBqE,KAAK,CAAEnD,QAAQ,CAACmD,KAAK,CACrBpE,IAAI,CAAE,CACJC,GAAG,CAAE,mCAAmC,CAAGC,kBAAkB,CAC3DjB,UAAU,CACN,kTAAkT,CAClTC,SAAS,CACP,kTAAkT,CAClT,wTACR,CAAC,CACDiB,UAAU,CAAElB,UAAU,CAClB,GAAI,CAAAS,MAAM,CAACC,MAAM,CAACC,IAAI,CAACQ,IAAI,CAAC,EAAE,CAAE,EAAE,CAAC,CACnClB,SAAS,CACP,GAAI,CAAAQ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACQ,IAAI,CAAC,EAAE,CAAE,EAAE,CAAC,CACnC,GAAI,CAAAV,MAAM,CAACC,MAAM,CAACC,IAAI,CAACQ,IAAI,CAAC,EAAE,CAAE,EAAE,CAAC,CACzCC,MAAM,CAAEpB,UAAU,CACd,GAAI,CAAAS,MAAM,CAACC,MAAM,CAACC,IAAI,CAACU,KAAK,CAAC,EAAE,CAAE,EAAE,CAAC,CACpCpB,SAAS,CACP,GAAI,CAAAQ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACU,KAAK,CAAC,EAAE,CAAE,EAAE,CAAC,CACpC,GAAI,CAAAZ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACU,KAAK,CAAC,EAAE,CAAE,EAAE,CAC3C,CACF,CAAC,CAAC,CAEF;AACAb,MAAM,CAACc,WAAW,CAAC,WAAW,CAAE,IAAM,CACpC9B,kBAAkB,CAACwC,QAAQ,CAAClC,EAAE,CAAC,CACjC,CAAC,CAAC,CAEFU,MAAM,CAACc,WAAW,CAAC,UAAU,CAAE,IAAM,CACnC9B,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,CAAC,CAEF,GAAIf,aAAa,CAAE,CACjB+B,MAAM,CAACc,WAAW,CAAC,OAAO,CAAE,IAAM,CAChCC,OAAO,CAACC,GAAG,CAAC,cAAcQ,QAAQ,CAAClC,EAAE,MAAMkC,QAAQ,CAACmD,KAAK,EAAE,CAAC,CAC5D3F,kBAAkB,CAAC,IAAI,CAAC,CAAE;AAC1BN,iBAAiB,CAAC4B,OAAO,CAAG,IAAI,CAEhC,GAAIlC,mBAAmB,CAAEA,mBAAmB,CAACoD,QAAQ,CAAClC,EAAE,CAAC,CACzD,GAAIhB,oBAAoB,CAAEA,oBAAoB,CAAC,EAAE,CAAC,CAClDL,aAAa,CAACuD,QAAQ,CAAC,CAEvBP,UAAU,CAAC,IAAM,CACfvC,iBAAiB,CAAC4B,OAAO,CAAG,KAAK,CACnC,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAC,CACJ,CAEA7B,UAAU,CAAC6B,OAAO,CAAC6B,IAAI,CAACnC,MAAM,CAAC,CACjC,CAAC,CAAC,CACFe,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEvC,UAAU,CAAC6B,OAAO,CAACX,MAAM,CAAC,CACjE,CAAC,IAAM,CACLoB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CACtB,KAAM,CAAAK,QAAQ,CAAGH,cAAc,CAAC,EAAE,CAAEuD,WAAW,CAAC,CAChD1D,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEK,QAAQ,CAAC1B,MAAM,CAAC,CAE5C0B,QAAQ,CAACE,OAAO,CAAC,CAACI,OAAO,CAAEiD,YAAY,GAAK,CAC1C7D,OAAO,CAACC,GAAG,CAAC,QAAQ4D,YAAY,CAAG,CAAC,KAAKjD,OAAO,CAAC3D,UAAU,CAAC2B,MAAM,MAAM,CAAC,CACzE,GAAIgC,OAAO,CAAC3D,UAAU,CAAC2B,MAAM,GAAK,CAAC,CAAE,CACnC,KAAM,CAAA6B,QAAQ,CAAGG,OAAO,CAAC3D,UAAU,CAAC,CAAC,CAAC,CACtC,KAAM,CAAAwB,UAAU,CAAGrB,gBAAgB,GAAKqD,QAAQ,CAAClC,EAAE,CACnD,KAAM,CAAAG,SAAS,CAAGV,eAAe,GAAKyC,QAAQ,CAAClC,EAAE,CACjD,KAAM,CAAAU,MAAM,CAAG,GAAI,CAAAC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC,CAC3CC,QAAQ,CAAEmB,QAAQ,CAACQ,QAAQ,CAC3B5C,GAAG,CAAEZ,WAAW,CAAC8B,OAAO,CACxBqE,KAAK,CAAEnD,QAAQ,CAACmD,KAAK,CACrBpE,IAAI,CAAE,CACJC,GAAG,CAAE,mCAAmC,CAAGC,kBAAkB,CAC3DjB,UAAU,CACN,kTAAkT,CAClTC,SAAS,CACP,kTAAkT,CAClT,wTACR,CAAC,CACDiB,UAAU,CAAElB,UAAU,CAClB,GAAI,CAAAS,MAAM,CAACC,MAAM,CAACC,IAAI,CAACQ,IAAI,CAAC,EAAE,CAAE,EAAE,CAAC,CACnClB,SAAS,CACP,GAAI,CAAAQ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACQ,IAAI,CAAC,EAAE,CAAE,EAAE,CAAC,CACnC,GAAI,CAAAV,MAAM,CAACC,MAAM,CAACC,IAAI,CAACQ,IAAI,CAAC,EAAE,CAAE,EAAE,CAAC,CACzCC,MAAM,CAAEpB,UAAU,CACd,GAAI,CAAAS,MAAM,CAACC,MAAM,CAACC,IAAI,CAACU,KAAK,CAAC,EAAE,CAAE,EAAE,CAAC,CACpCpB,SAAS,CACP,GAAI,CAAAQ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACU,KAAK,CAAC,EAAE,CAAE,EAAE,CAAC,CACpC,GAAI,CAAAZ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACU,KAAK,CAAC,EAAE,CAAE,EAAE,CAC3C,CACF,CAAC,CAAC,CAEF;AACAb,MAAM,CAACc,WAAW,CAAC,WAAW,CAAE,IAAM,CACpC9B,kBAAkB,CAACwC,QAAQ,CAAClC,EAAE,CAAC,CACjC,CAAC,CAAC,CAEFU,MAAM,CAACc,WAAW,CAAC,UAAU,CAAE,IAAM,CACnC9B,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,CAAC,CAEF,GAAIf,aAAa,CAAE,CACjB+B,MAAM,CAACc,WAAW,CAAC,OAAO,CAAE,IAAM,CAChCC,OAAO,CAACC,GAAG,CAAC,qBAAqBQ,QAAQ,CAAClC,EAAE,MAAMkC,QAAQ,CAACmD,KAAK,EAAE,CAAC,CACnE3F,kBAAkB,CAAC,IAAI,CAAC,CAAE;AAC1BN,iBAAiB,CAAC4B,OAAO,CAAG,IAAI,CAEhC,GAAIlC,mBAAmB,CAAEA,mBAAmB,CAACoD,QAAQ,CAAClC,EAAE,CAAC,CACzD,GAAIhB,oBAAoB,CAAEA,oBAAoB,CAAC,EAAE,CAAC,CAClDL,aAAa,CAACuD,QAAQ,CAAC,CAEvBP,UAAU,CAAC,IAAM,CACfvC,iBAAiB,CAAC4B,OAAO,CAAG,KAAK,CACnC,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAC,CACJ,CAEA7B,UAAU,CAAC6B,OAAO,CAAC6B,IAAI,CAACnC,MAAM,CAAC,CACjC,CAAC,IAAM,CACL,KAAM,CAAA6E,aAAa,CAAG5F,mBAAmB,CAAC0C,OAAO,CAAC3D,UAAU,CAAE2D,OAAO,CAACzC,MAAM,CAAC,CAC7ET,UAAU,CAAC6B,OAAO,CAAC6B,IAAI,CAAC0C,aAAa,CAAC,CACxC,CACF,CAAC,CAAC,CACF9D,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEvC,UAAU,CAAC6B,OAAO,CAACX,MAAM,CAAC,CACnE,CACF,CAAC,CAED,KAAM,CAAA6C,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAI,CAAChE,WAAW,CAAC8B,OAAO,CAAE,OAE1B7B,UAAU,CAAC6B,OAAO,CAACiB,OAAO,CAACvB,MAAM,EAAI,CACnC,GAAIA,MAAM,EAAIA,MAAM,CAACyC,MAAM,CAAE,CAC3BzC,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC,CACrB,CACF,CAAC,CAAC,CACFhE,UAAU,CAAC6B,OAAO,CAAG,EAAE,CAEvBiE,aAAa,CAAC,CAAC,CACjB,CAAC,CAED,KAAM,CAAAO,YAAY,CAAG1H,WAAW,CAAC,IAAM,CACrC2D,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtC,GAAIf,MAAM,CAACC,MAAM,EAAID,MAAM,CAACC,MAAM,CAACC,IAAI,CAAE,CACvCY,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAC7C,GAAIsB,OAAO,CAAC,CAAC,CAAE,CACbvB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,CACxB,OACF,CACF,CAAC,IAAM,CACLD,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CACnD,CAEAC,UAAU,CAAC6D,YAAY,CAAE,GAAG,CAAC,CAC/B,CAAC,CAAE,CAACxC,OAAO,CAAC,CAAC,CAEbrF,SAAS,CAAC,IAAM,CACd6H,YAAY,CAAC,CAAC,CAEd,MAAO,IAAM,CACXrG,UAAU,CAAC6B,OAAO,CAACiB,OAAO,CAACvB,MAAM,EAAI,CACnC,GAAIA,MAAM,EAAIA,MAAM,CAACyC,MAAM,CAAE,CAC3BzC,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC,CACrB,CACF,CAAC,CAAC,CACFhE,UAAU,CAAC6B,OAAO,CAAG,EAAE,CACzB,CAAC,CACH,CAAC,CAAE,CAACwE,YAAY,CAAC,CAAC,CAElB;AACA7H,SAAS,CAAC,IAAM,CACd,GAAIuB,WAAW,CAAC8B,OAAO,EAAI3B,WAAW,CAAE,CACtC6D,aAAa,CAAC,CAAC,CACjB,CACF,CAAC,CAAE,CAACxE,UAAU,CAAEG,gBAAgB,CAAEE,iBAAiB,CAAEU,eAAe,CAAEJ,WAAW,CAAC,CAAC,CAEnF,mBACEpB,IAAA,CAACG,YAAY,EAAAqH,QAAA,CACV,CAACpG,WAAW,EAAIE,QAAQ,cACvBtB,IAAA,CAACK,WAAW,EAAAmH,QAAA,cACVtH,KAAA,CAACI,QAAQ,EAAAkH,QAAA,eACPxH,IAAA,QAAKyH,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAM,CAAEpF,QAAQ,CAAE,QAAS,CAAE,CAAAkF,QAAA,CAAC,oBAAG,CAAK,CAAC,cACnExH,IAAA,QAAKyH,KAAK,CAAE,CAAEC,YAAY,CAAE,QAAQ,CAAEC,UAAU,CAAE,MAAO,CAAE,CAAAH,QAAA,CAAC,wCAAQ,CAAK,CAAC,cAC1ExH,IAAA,QAAKyH,KAAK,CAAE,CAAEnF,QAAQ,CAAE,QAAQ,CAAEsF,KAAK,CAAE,SAAU,CAAE,CAAAJ,QAAA,CAAElG,QAAQ,CAAM,CAAC,cACtEtB,IAAA,WACE6H,OAAO,CAAEA,CAAA,GAAM,CACbtG,WAAW,CAAC,IAAI,CAAC,CACjBF,cAAc,CAAC,KAAK,CAAC,CACrBkG,YAAY,CAAC,CAAC,CAChB,CAAE,CACFE,KAAK,CAAE,CACLK,SAAS,CAAE,MAAM,CACjBC,OAAO,CAAE,aAAa,CACtBC,UAAU,CAAE,SAAS,CACrBJ,KAAK,CAAE,OAAO,CACdK,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SACV,CAAE,CAAAX,QAAA,CACH,2BAED,CAAQ,CAAC,EACD,CAAC,CACA,CAAC,cAEdxH,IAAA,QAAKoI,GAAG,CAAEpH,MAAO,CAACyG,KAAK,CAAE,CAAEY,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAE,CAC9D,CACW,CAAC,CAEnB,CAAC,CAED,cAAe,CAAA/H,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}