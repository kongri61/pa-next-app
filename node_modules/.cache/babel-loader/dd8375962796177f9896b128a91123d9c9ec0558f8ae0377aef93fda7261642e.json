{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";const MapContainer=styled.div`\n  width: 100%;\n  height: 100%;\n  min-height: 400px;\n  background: #f0f0f0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #666;\n  font-size: 1rem;\n`;const GoogleMap=_ref=>{let{properties,onMarkerClick,center={lat:37.5665,lng:126.9780},// 서울 시청\nzoom=12}=_ref;const mapRef=useRef(null);const[map,setMap]=useState(null);const[markers,setMarkers]=useState([]);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);// Google Maps API 로딩 확인\nuseEffect(()=>{const checkGoogleMapsLoaded=()=>{if(window.google&&window.google.maps){setIsLoading(false);return true;}return false;};if(checkGoogleMapsLoaded()){return;}// API가 로드될 때까지 대기\nconst interval=setInterval(()=>{if(checkGoogleMapsLoaded()){clearInterval(interval);}},100);// 10초 후 타임아웃\nconst timeout=setTimeout(()=>{clearInterval(interval);setError('Google Maps API 로딩 실패');setIsLoading(false);},10000);return()=>{clearInterval(interval);clearTimeout(timeout);};},[]);// 지도 초기화\nuseEffect(()=>{if(isLoading||!mapRef.current||!window.google||!window.google.maps){return;}try{const newMap=new window.google.maps.Map(mapRef.current,{center,zoom,mapTypeId:window.google.maps.MapTypeId.ROADMAP,disableDefaultUI:false,zoomControl:true,mapTypeControl:false,scaleControl:true,streetViewControl:false,rotateControl:false,fullscreenControl:false,styles:[{featureType:'poi',elementType:'labels',stylers:[{visibility:'off'}]}]});setMap(newMap);setError(null);}catch(err){console.error('지도 초기화 오류:',err);setError('지도 초기화 실패');}},[isLoading,center,zoom]);// 마커 생성\nuseEffect(()=>{if(!map||!window.google||!window.google.maps)return;try{// 기존 마커들 제거\nmarkers.forEach(marker=>{if(marker&&marker.setMap){marker.setMap(null);}});// 새로운 마커들 생성\nconst newMarkers=properties.map(property=>{const marker=new window.google.maps.Marker({position:property.location,map,title:property.title,icon:{url:'data:image/svg+xml;charset=UTF-8,'+encodeURIComponent(`\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\" fill=\"#2563eb\"/>\n              </svg>\n            `),scaledSize:new window.google.maps.Size(24,24),anchor:new window.google.maps.Point(12,12)}});if(onMarkerClick){marker.addListener('click',()=>{onMarkerClick(property);});}return marker;});setMarkers(newMarkers);}catch(err){console.error('마커 생성 오류:',err);}},[map,properties,onMarkerClick]);if(isLoading){return/*#__PURE__*/_jsx(MapContainer,{children:\"\\uC9C0\\uB3C4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"});}if(error){return/*#__PURE__*/_jsx(MapContainer,{children:error});}return/*#__PURE__*/_jsx(MapContainer,{ref:mapRef});};export default GoogleMap;","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","jsx","_jsx","MapContainer","div","GoogleMap","_ref","properties","onMarkerClick","center","lat","lng","zoom","mapRef","map","setMap","markers","setMarkers","isLoading","setIsLoading","error","setError","checkGoogleMapsLoaded","window","google","maps","interval","setInterval","clearInterval","timeout","setTimeout","clearTimeout","current","newMap","Map","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","styles","featureType","elementType","stylers","visibility","err","console","forEach","marker","newMarkers","property","Marker","position","location","title","icon","url","encodeURIComponent","scaledSize","Size","anchor","Point","addListener","children","ref"],"sources":["C:/Users/user/지도기반사이트만들기/src/components/GoogleMap.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Property } from '../types';\r\n\r\nconst MapContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 400px;\r\n  background: #f0f0f0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n  font-size: 1rem;\r\n`;\r\n\r\ninterface GoogleMapProps {\r\n  properties: Property[];\r\n  onMarkerClick?: (property: Property) => void;\r\n  center?: { lat: number; lng: number };\r\n  zoom?: number;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    google: any;\r\n  }\r\n}\r\n\r\nconst GoogleMap: React.FC<GoogleMapProps> = ({\r\n  properties,\r\n  onMarkerClick,\r\n  center = { lat: 37.5665, lng: 126.9780 }, // 서울 시청\r\n  zoom = 12\r\n}) => {\r\n  const mapRef = useRef<HTMLDivElement>(null);\r\n  const [map, setMap] = useState<any>(null);\r\n  const [markers, setMarkers] = useState<any[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Google Maps API 로딩 확인\r\n  useEffect(() => {\r\n    const checkGoogleMapsLoaded = () => {\r\n      if (window.google && window.google.maps) {\r\n        setIsLoading(false);\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    if (checkGoogleMapsLoaded()) {\r\n      return;\r\n    }\r\n\r\n    // API가 로드될 때까지 대기\r\n    const interval = setInterval(() => {\r\n      if (checkGoogleMapsLoaded()) {\r\n        clearInterval(interval);\r\n      }\r\n    }, 100);\r\n\r\n    // 10초 후 타임아웃\r\n    const timeout = setTimeout(() => {\r\n      clearInterval(interval);\r\n      setError('Google Maps API 로딩 실패');\r\n      setIsLoading(false);\r\n    }, 10000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      clearTimeout(timeout);\r\n    };\r\n  }, []);\r\n\r\n  // 지도 초기화\r\n  useEffect(() => {\r\n    if (isLoading || !mapRef.current || !window.google || !window.google.maps) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const newMap = new window.google.maps.Map(mapRef.current, {\r\n        center,\r\n        zoom,\r\n        mapTypeId: window.google.maps.MapTypeId.ROADMAP,\r\n        disableDefaultUI: false,\r\n        zoomControl: true,\r\n        mapTypeControl: false,\r\n        scaleControl: true,\r\n        streetViewControl: false,\r\n        rotateControl: false,\r\n        fullscreenControl: false,\r\n        styles: [\r\n          {\r\n            featureType: 'poi',\r\n            elementType: 'labels',\r\n            stylers: [{ visibility: 'off' }]\r\n          }\r\n        ]\r\n      });\r\n\r\n      setMap(newMap);\r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('지도 초기화 오류:', err);\r\n      setError('지도 초기화 실패');\r\n    }\r\n  }, [isLoading, center, zoom]);\r\n\r\n  // 마커 생성\r\n  useEffect(() => {\r\n    if (!map || !window.google || !window.google.maps) return;\r\n\r\n    try {\r\n      // 기존 마커들 제거\r\n      markers.forEach(marker => {\r\n        if (marker && marker.setMap) {\r\n          marker.setMap(null);\r\n        }\r\n      });\r\n\r\n      // 새로운 마커들 생성\r\n      const newMarkers = properties.map(property => {\r\n        const marker = new window.google.maps.Marker({\r\n          position: property.location,\r\n          map,\r\n          title: property.title,\r\n          icon: {\r\n            url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\r\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\" fill=\"#2563eb\"/>\r\n              </svg>\r\n            `),\r\n            scaledSize: new window.google.maps.Size(24, 24),\r\n            anchor: new window.google.maps.Point(12, 12)\r\n          }\r\n        });\r\n\r\n        if (onMarkerClick) {\r\n          marker.addListener('click', () => {\r\n            onMarkerClick(property);\r\n          });\r\n        }\r\n\r\n        return marker;\r\n      });\r\n\r\n      setMarkers(newMarkers);\r\n    } catch (err) {\r\n      console.error('마커 생성 오류:', err);\r\n    }\r\n  }, [map, properties, onMarkerClick]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <MapContainer>\r\n        지도를 불러오는 중...\r\n      </MapContainer>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <MapContainer>\r\n        {error}\r\n      </MapContainer>\r\n    );\r\n  }\r\n\r\n  return <MapContainer ref={mapRef} />;\r\n};\r\n\r\nexport default GoogleMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}