{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\\\uC9C0\\uB3C4\\uAE30\\uBC18\\uC0AC\\uC774\\uD2B8\\uB9CC\\uB4E4\\uAE30\\\\src\\\\components\\\\GoogleMap.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  min-height: 400px;\n`;\n_c = MapContainer;\nconst GoogleMap = ({\n  properties,\n  onMarkerClick,\n  center = {\n    lat: 37.5665,\n    lng: 126.9780\n  },\n  // 서울 시청\n  zoom = 12\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  useEffect(() => {\n    if (!mapRef.current || !window.google) return;\n    const newMap = new window.google.maps.Map(mapRef.current, {\n      center,\n      zoom,\n      styles: [{\n        featureType: 'poi',\n        elementType: 'labels',\n        stylers: [{\n          visibility: 'off'\n        }]\n      }]\n    });\n    setMap(newMap);\n  }, [center, zoom]);\n  useEffect(() => {\n    if (!map || !window.google) return;\n\n    // 기존 마커들 제거\n    markers.forEach(marker => marker.setMap(null));\n\n    // 새로운 마커들 생성\n    const newMarkers = properties.map(property => {\n      const marker = new window.google.maps.Marker({\n        position: property.location,\n        map,\n        title: property.title,\n        icon: {\n          url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\" fill=\"#2563eb\"/>\n            </svg>\n          `),\n          scaledSize: new window.google.maps.Size(24, 24),\n          anchor: new window.google.maps.Point(12, 12)\n        }\n      });\n      if (onMarkerClick) {\n        marker.addListener('click', () => {\n          onMarkerClick(property);\n        });\n      }\n      return marker;\n    });\n    setMarkers(newMarkers);\n  }, [map, properties, onMarkerClick]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    ref: mapRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n};\n_s(GoogleMap, \"dsjKOQ3wEynPhzXsspLJ85tOBO8=\");\n_c2 = GoogleMap;\nexport default GoogleMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapContainer\");\n$RefreshReg$(_c2, \"GoogleMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","jsxDEV","_jsxDEV","MapContainer","div","_c","GoogleMap","properties","onMarkerClick","center","lat","lng","zoom","_s","mapRef","map","setMap","markers","setMarkers","current","window","google","newMap","maps","Map","styles","featureType","elementType","stylers","visibility","forEach","marker","newMarkers","property","Marker","position","location","title","icon","url","encodeURIComponent","scaledSize","Size","anchor","Point","addListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/user/지도기반사이트만들기/src/components/GoogleMap.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Property } from '../types';\r\n\r\nconst MapContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 400px;\r\n`;\r\n\r\ninterface GoogleMapProps {\r\n  properties: Property[];\r\n  onMarkerClick?: (property: Property) => void;\r\n  center?: { lat: number; lng: number };\r\n  zoom?: number;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    google: any;\r\n  }\r\n}\r\n\r\nconst GoogleMap: React.FC<GoogleMapProps> = ({\r\n  properties,\r\n  onMarkerClick,\r\n  center = { lat: 37.5665, lng: 126.9780 }, // 서울 시청\r\n  zoom = 12\r\n}) => {\r\n  const mapRef = useRef<HTMLDivElement>(null);\r\n  const [map, setMap] = useState<any>(null);\r\n  const [markers, setMarkers] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (!mapRef.current || !window.google) return;\r\n\r\n    const newMap = new window.google.maps.Map(mapRef.current, {\r\n      center,\r\n      zoom,\r\n      styles: [\r\n        {\r\n          featureType: 'poi',\r\n          elementType: 'labels',\r\n          stylers: [{ visibility: 'off' }]\r\n        }\r\n      ]\r\n    });\r\n\r\n    setMap(newMap);\r\n  }, [center, zoom]);\r\n\r\n  useEffect(() => {\r\n    if (!map || !window.google) return;\r\n\r\n    // 기존 마커들 제거\r\n    markers.forEach(marker => marker.setMap(null));\r\n\r\n    // 새로운 마커들 생성\r\n    const newMarkers = properties.map(property => {\r\n      const marker = new window.google.maps.Marker({\r\n        position: property.location,\r\n        map,\r\n        title: property.title,\r\n        icon: {\r\n          url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\" fill=\"#2563eb\"/>\r\n            </svg>\r\n          `),\r\n          scaledSize: new window.google.maps.Size(24, 24),\r\n          anchor: new window.google.maps.Point(12, 12)\r\n        }\r\n      });\r\n\r\n      if (onMarkerClick) {\r\n        marker.addListener('click', () => {\r\n          onMarkerClick(property);\r\n        });\r\n      }\r\n\r\n      return marker;\r\n    });\r\n\r\n    setMarkers(newMarkers);\r\n  }, [map, properties, onMarkerClick]);\r\n\r\n  return <MapContainer ref={mapRef} />;\r\n};\r\n\r\nexport default GoogleMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}