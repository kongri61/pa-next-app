{"ast":null,"code":"import React,{useEffect,useRef,useState,useCallback}from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MapContainer=styled.div`\n  width: 100%;\n  height: 100%;\n  min-height: 400px;\n  position: relative;\n  overflow: visible;\n  background: #f0f0f0;\n`;const FallbackMap=styled.div`\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(45deg, #e5e7eb 25%, transparent 25%), \n              linear-gradient(-45deg, #e5e7eb 25%, transparent 25%), \n              linear-gradient(45deg, transparent 75%, #e5e7eb 75%), \n              linear-gradient(-45deg, transparent 75%, #e5e7eb 75%);\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #6b7280;\n  font-size: 1.2rem;\n  font-weight: 500;\n`;const MapError=styled.div`\n  text-align: center;\n  padding: 2rem;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  max-width: 400px;\n`;const GoogleMap=_ref=>{let{properties,onMarkerClick,onClusterClick,selectedMarkerId,setSelectedMarkerId,selectedClusterId,setSelectedClusterId}=_ref;const mapRef=useRef(null);const mapInstance=useRef(null);const markersRef=useRef([]);const isClusterClicking=useRef(false);const[isMapLoaded,setIsMapLoaded]=useState(false);const[mapError,setMapError]=useState(null);// 마커 클러스터링 함수\nconst createClusterMarker=(properties,center)=>{const clusterId=properties.map(p=>p.id).join(',');const isSelected=selectedClusterId===clusterId;const marker=new window.google.maps.Marker({position:center,map:mapInstance.current,icon:{url:'data:image/svg+xml;charset=UTF-8,'+encodeURIComponent(isSelected?`<svg width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"22\" cy=\"22\" r=\"20\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/>\n                <text x=\"22\" y=\"26\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"14\" font-weight=\"bold\">${properties.length}</text>\n              </svg>`:`<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"20\" cy=\"20\" r=\"18\" fill=\"#2563eb\" stroke=\"#1e40af\" stroke-width=\"3\"/>\n                <text x=\"20\" y=\"26\" text-anchor=\"middle\" fill=\"white\" font-family=\"Arial, sans-serif\" font-size=\"14\" font-weight=\"bold\">${properties.length}</text>\n              </svg>`),scaledSize:isSelected?new window.google.maps.Size(44,44):new window.google.maps.Size(40,40),anchor:isSelected?new window.google.maps.Point(22,22):new window.google.maps.Point(20,20)}});marker.addListener('click',()=>{console.log(`클러스터 클릭: ${properties.length}개 매물`);isClusterClicking.current=true;if(properties.length===1){if(onMarkerClick){onMarkerClick(properties[0]);}}else{if(onClusterClick){onClusterClick(properties);}}setTimeout(()=>{isClusterClicking.current=false;},1500);});return marker;};// 마커 클러스터링 로직\nconst clusterMarkers=(markers,zoom)=>{const clusters=[];let clusterRadius;if(zoom<8){clusterRadius=0.05;}else if(zoom<10){clusterRadius=0.02;}else if(zoom<12){clusterRadius=0.01;}else if(zoom<14){clusterRadius=0.005;}else if(zoom<16){clusterRadius=0.002;}else if(zoom<18){clusterRadius=0.001;}else{clusterRadius=0.00001;}properties.forEach((property,index)=>{let addedToCluster=false;for(const cluster of clusters){const distance=Math.sqrt(Math.pow(property.location.lat-cluster.center.lat,2)+Math.pow(property.location.lng-cluster.center.lng,2));if(distance<clusterRadius){cluster.properties.push(property);cluster.center={lat:cluster.properties.reduce((sum,p)=>sum+p.location.lat,0)/cluster.properties.length,lng:cluster.properties.reduce((sum,p)=>sum+p.location.lng,0)/cluster.properties.length};addedToCluster=true;break;}}if(!addedToCluster){clusters.push({center:property.location,properties:[property]});}});return clusters;};// 지도 초기화\nconst initMap=()=>{var _window$google;console.log('지도 초기화 시도...');console.log('mapRef.current:',mapRef.current);console.log('window.google:',window.google);console.log('window.google.maps:',(_window$google=window.google)===null||_window$google===void 0?void 0:_window$google.maps);if(!mapRef.current){console.log('mapRef가 없음');return false;}if(!window.google){console.log('Google Maps API가 로드되지 않음');return false;}if(!window.google.maps){console.log('Google Maps 객체가 없음');return false;}if(mapInstance.current){console.log('기존 지도 인스턴스 업데이트');updateMarkers();return true;}try{console.log('새 지도 인스턴스 생성 시작...');markersRef.current.forEach(marker=>{if(marker&&marker.setMap){marker.setMap(null);}});markersRef.current=[];const map=new window.google.maps.Map(mapRef.current,{center:{lat:37.5665,lng:126.9780},zoom:10,mapTypeId:window.google.maps.MapTypeId.ROADMAP,zoomControl:true,mapTypeControl:false,scaleControl:false,streetViewControl:false,rotateControl:false,fullscreenControl:false,gestureHandling:'greedy',backgroundColor:'#f0f0f0',disableDefaultUI:false,maxZoom:20,minZoom:8,tilt:0,zoomControlOptions:{position:window.google.maps.ControlPosition.RIGHT_TOP},disableDoubleClickZoom:false,restriction:{latLngBounds:{north:38.0,south:34.5,east:131.0,west:125.0},strictBounds:false}});console.log('지도 인스턴스 생성 완료:',map);mapInstance.current=map;createMarkers();map.addListener('zoom_changed',()=>{if(isClusterClicking.current){return;}markersRef.current.forEach(marker=>{if(marker&&marker.setMap){marker.setMap(null);}});markersRef.current=[];setTimeout(()=>{if(!isClusterClicking.current){createMarkers();}},300);});console.log('지도 초기화 완료');setIsMapLoaded(true);setMapError(null);return true;}catch(error){console.error('지도 초기화 오류:',error);setMapError('지도를 로드할 수 없습니다. Google Maps API를 확인해주세요.');setIsMapLoaded(false);return false;}};const createMarkers=()=>{if(!mapInstance.current)return;const currentZoom=mapInstance.current.getZoom();if(currentZoom>=18){properties.forEach((property,index)=>{const isSelected=selectedMarkerId===property.id;const marker=new window.google.maps.Marker({position:property.location,map:mapInstance.current,title:property.title,icon:{url:'data:image/svg+xml;charset=UTF-8,'+encodeURIComponent(isSelected?`<svg width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"22\" cy=\"22\" r=\"20\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/><text x=\"22\" y=\"29\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"16\" font-weight=\"bold\">1</text></svg>`:`<svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"15\" cy=\"15\" r=\"13\" fill=\"#2563eb\" stroke=\"#1e40af\" stroke-width=\"2\"/><text x=\"15\" y=\"19\" text-anchor=\"middle\" fill=\"white\" font-family=\"Arial, sans-serif\" font-size=\"10\" font-weight=\"bold\">1</text></svg>`),scaledSize:isSelected?new window.google.maps.Size(44,44):new window.google.maps.Size(30,30),anchor:isSelected?new window.google.maps.Point(22,22):new window.google.maps.Point(15,15)}});if(onMarkerClick){marker.addListener('click',()=>{console.log(`개별 마커 클릭됨: ${property.id} - ${property.title}`);isClusterClicking.current=true;if(setSelectedMarkerId)setSelectedMarkerId(property.id);if(setSelectedClusterId)setSelectedClusterId('');onMarkerClick(property);setTimeout(()=>{isClusterClicking.current=false;},1500);});}markersRef.current.push(marker);});}else{const clusters=clusterMarkers([],currentZoom);clusters.forEach((cluster,clusterIndex)=>{if(cluster.properties.length===1){const property=cluster.properties[0];const isSelected=selectedMarkerId===property.id;const marker=new window.google.maps.Marker({position:property.location,map:mapInstance.current,title:property.title,icon:{url:'data:image/svg+xml;charset=UTF-8,'+encodeURIComponent(isSelected?`<svg width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"22\" cy=\"22\" r=\"20\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/><text x=\"22\" y=\"29\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"16\" font-weight=\"bold\">1</text></svg>`:`<svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"15\" cy=\"15\" r=\"13\" fill=\"#2563eb\" stroke=\"#1e40af\" stroke-width=\"2\"/><text x=\"15\" y=\"19\" text-anchor=\"middle\" fill=\"white\" font-family=\"Arial, sans-serif\" font-size=\"10\" font-weight=\"bold\">1</text></svg>`),scaledSize:isSelected?new window.google.maps.Size(44,44):new window.google.maps.Size(30,30),anchor:isSelected?new window.google.maps.Point(22,22):new window.google.maps.Point(15,15)}});if(onMarkerClick){marker.addListener('click',()=>{console.log(`클러스터링된 단일 마커 클릭됨: ${property.id} - ${property.title}`);isClusterClicking.current=true;if(setSelectedMarkerId)setSelectedMarkerId(property.id);if(setSelectedClusterId)setSelectedClusterId('');onMarkerClick(property);setTimeout(()=>{isClusterClicking.current=false;},1500);});}markersRef.current.push(marker);}else{const clusterMarker=createClusterMarker(cluster.properties,cluster.center);markersRef.current.push(clusterMarker);}});}};const updateMarkers=()=>{if(!mapInstance.current)return;markersRef.current.forEach(marker=>{if(marker&&marker.setMap){marker.setMap(null);}});markersRef.current=[];createMarkers();};const checkAndInit=useCallback(()=>{console.log('Google Maps API 확인 중...');if(window.google&&window.google.maps){console.log('Google Maps API 로드됨, 지도 초기화 시도');if(initMap()){console.log('지도 초기화 성공');return;}}else{console.log('Google Maps API 아직 로드되지 않음, 재시도...');}setTimeout(checkAndInit,100);},[]);useEffect(()=>{checkAndInit();return()=>{markersRef.current.forEach(marker=>{if(marker&&marker.setMap){marker.setMap(null);}});markersRef.current=[];};},[checkAndInit,properties,onMarkerClick,onClusterClick,selectedMarkerId,setSelectedMarkerId,selectedClusterId,setSelectedClusterId]);return/*#__PURE__*/_jsx(MapContainer,{children:!isMapLoaded&&mapError?/*#__PURE__*/_jsx(FallbackMap,{children:/*#__PURE__*/_jsxs(MapError,{children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'1rem',fontSize:'1.5rem'},children:\"\\uD83D\\uDDFA\\uFE0F\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'0.5rem',fontWeight:'bold'},children:\"\\uC9C0\\uB3C4 \\uB85C\\uB4DC \\uC2E4\\uD328\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.9rem',color:'#6b7280'},children:mapError}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setMapError(null);setIsMapLoaded(false);checkAndInit();},style:{marginTop:'1rem',padding:'0.5rem 1rem',background:'#2563eb',color:'white',border:'none',borderRadius:'4px',cursor:'pointer'},children:\"\\uB2E4\\uC2DC \\uC2DC\\uB3C4\"})]})}):/*#__PURE__*/_jsx(\"div\",{ref:mapRef,style:{width:'100%',height:'100%'}})});};export default GoogleMap;","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","styled","jsx","_jsx","jsxs","_jsxs","MapContainer","div","FallbackMap","MapError","GoogleMap","_ref","properties","onMarkerClick","onClusterClick","selectedMarkerId","setSelectedMarkerId","selectedClusterId","setSelectedClusterId","mapRef","mapInstance","markersRef","isClusterClicking","isMapLoaded","setIsMapLoaded","mapError","setMapError","createClusterMarker","center","clusterId","map","p","id","join","isSelected","marker","window","google","maps","Marker","position","current","icon","url","encodeURIComponent","length","scaledSize","Size","anchor","Point","addListener","console","log","setTimeout","clusterMarkers","markers","zoom","clusters","clusterRadius","forEach","property","index","addedToCluster","cluster","distance","Math","sqrt","pow","location","lat","lng","push","reduce","sum","initMap","_window$google","updateMarkers","setMap","Map","mapTypeId","MapTypeId","ROADMAP","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","gestureHandling","backgroundColor","disableDefaultUI","maxZoom","minZoom","tilt","zoomControlOptions","ControlPosition","RIGHT_TOP","disableDoubleClickZoom","restriction","latLngBounds","north","south","east","west","strictBounds","createMarkers","error","currentZoom","getZoom","title","clusterIndex","clusterMarker","checkAndInit","children","style","marginBottom","fontSize","fontWeight","color","onClick","marginTop","padding","background","border","borderRadius","cursor","ref","width","height"],"sources":["C:/Users/user/지도기반사이트만들기/src/components/GoogleMap.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Property } from '../types';\n\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  min-height: 400px;\n  position: relative;\n  overflow: visible;\n  background: #f0f0f0;\n`;\n\nconst FallbackMap = styled.div`\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(45deg, #e5e7eb 25%, transparent 25%), \n              linear-gradient(-45deg, #e5e7eb 25%, transparent 25%), \n              linear-gradient(45deg, transparent 75%, #e5e7eb 75%), \n              linear-gradient(-45deg, transparent 75%, #e5e7eb 75%);\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #6b7280;\n  font-size: 1.2rem;\n  font-weight: 500;\n`;\n\nconst MapError = styled.div`\n  text-align: center;\n  padding: 2rem;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  max-width: 400px;\n`;\n\ninterface GoogleMapProps {\n  properties: Property[];\n  onMarkerClick?: (property: Property) => void;\n  onClusterClick?: (properties: Property[]) => void;\n  selectedMarkerId?: string | null;\n  setSelectedMarkerId?: (id: string) => void;\n  selectedClusterId?: string | null;\n  setSelectedClusterId?: (id: string) => void;\n}\n\ndeclare global {\n  interface Window {\n    google: any;\n  }\n}\n\nconst GoogleMap: React.FC<GoogleMapProps> = ({\n  properties,\n  onMarkerClick,\n  onClusterClick,\n  selectedMarkerId,\n  setSelectedMarkerId,\n  selectedClusterId,\n  setSelectedClusterId\n}) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const mapInstance = useRef<any>(null);\n  const markersRef = useRef<any[]>([]);\n  const isClusterClicking = useRef(false);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [mapError, setMapError] = useState<string | null>(null);\n\n  // 마커 클러스터링 함수\n  const createClusterMarker = (properties: Property[], center: { lat: number; lng: number }) => {\n    const clusterId = properties.map(p => p.id).join(',');\n    const isSelected = selectedClusterId === clusterId;\n    \n    const marker = new window.google.maps.Marker({\n      position: center,\n      map: mapInstance.current,\n      icon: {\n        url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(\n          isSelected\n            ? `<svg width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"22\" cy=\"22\" r=\"20\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/>\n                <text x=\"22\" y=\"26\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"14\" font-weight=\"bold\">${properties.length}</text>\n              </svg>`\n            : `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"20\" cy=\"20\" r=\"18\" fill=\"#2563eb\" stroke=\"#1e40af\" stroke-width=\"3\"/>\n                <text x=\"20\" y=\"26\" text-anchor=\"middle\" fill=\"white\" font-family=\"Arial, sans-serif\" font-size=\"14\" font-weight=\"bold\">${properties.length}</text>\n              </svg>`\n        ),\n        scaledSize: isSelected\n          ? new window.google.maps.Size(44, 44)\n          : new window.google.maps.Size(40, 40),\n        anchor: isSelected\n          ? new window.google.maps.Point(22, 22)\n          : new window.google.maps.Point(20, 20)\n      }\n    });\n\n    marker.addListener('click', () => {\n      console.log(`클러스터 클릭: ${properties.length}개 매물`);\n      \n      isClusterClicking.current = true;\n      \n      if (properties.length === 1) {\n        if (onMarkerClick) {\n          onMarkerClick(properties[0]);\n        }\n      } else {\n        if (onClusterClick) {\n          onClusterClick(properties);\n        }\n      }\n      \n      setTimeout(() => {\n        isClusterClicking.current = false;\n      }, 1500);\n    });\n\n    return marker;\n  };\n\n  // 마커 클러스터링 로직\n  const clusterMarkers = (markers: any[], zoom: number) => {\n    const clusters: { center: { lat: number; lng: number }; properties: Property[] }[] = [];\n    \n    let clusterRadius: number;\n    if (zoom < 8) {\n      clusterRadius = 0.05;\n    } else if (zoom < 10) {\n      clusterRadius = 0.02;\n    } else if (zoom < 12) {\n      clusterRadius = 0.01;\n    } else if (zoom < 14) {\n      clusterRadius = 0.005;\n    } else if (zoom < 16) {\n      clusterRadius = 0.002;\n    } else if (zoom < 18) {\n      clusterRadius = 0.001;\n    } else {\n      clusterRadius = 0.00001;\n    }\n\n    properties.forEach((property, index) => {\n      let addedToCluster = false;\n      \n      for (const cluster of clusters) {\n        const distance = Math.sqrt(\n          Math.pow(property.location.lat - cluster.center.lat, 2) +\n          Math.pow(property.location.lng - cluster.center.lng, 2)\n        );\n        \n        if (distance < clusterRadius) {\n          cluster.properties.push(property);\n          cluster.center = {\n            lat: cluster.properties.reduce((sum, p) => sum + p.location.lat, 0) / cluster.properties.length,\n            lng: cluster.properties.reduce((sum, p) => sum + p.location.lng, 0) / cluster.properties.length\n          };\n          addedToCluster = true;\n          break;\n        }\n      }\n      \n      if (!addedToCluster) {\n        clusters.push({\n          center: property.location,\n          properties: [property]\n        });\n      }\n    });\n\n    return clusters;\n  };\n\n  // 지도 초기화\n  const initMap = () => {\n    console.log('지도 초기화 시도...');\n    console.log('mapRef.current:', mapRef.current);\n    console.log('window.google:', window.google);\n    console.log('window.google.maps:', window.google?.maps);\n    \n    if (!mapRef.current) {\n      console.log('mapRef가 없음');\n      return false;\n    }\n    \n    if (!window.google) {\n      console.log('Google Maps API가 로드되지 않음');\n      return false;\n    }\n    \n    if (!window.google.maps) {\n      console.log('Google Maps 객체가 없음');\n      return false;\n    }\n\n    if (mapInstance.current) {\n      console.log('기존 지도 인스턴스 업데이트');\n      updateMarkers();\n      return true;\n    }\n\n    try {\n      console.log('새 지도 인스턴스 생성 시작...');\n      markersRef.current.forEach(marker => {\n        if (marker && marker.setMap) {\n          marker.setMap(null);\n        }\n      });\n      markersRef.current = [];\n\n      const map = new window.google.maps.Map(mapRef.current, {\n        center: { lat: 37.5665, lng: 126.9780 },\n        zoom: 10,\n        mapTypeId: window.google.maps.MapTypeId.ROADMAP,\n        zoomControl: true,\n        mapTypeControl: false,\n        scaleControl: false,\n        streetViewControl: false,\n        rotateControl: false,\n        fullscreenControl: false,\n        gestureHandling: 'greedy',\n        backgroundColor: '#f0f0f0',\n        disableDefaultUI: false,\n        maxZoom: 20,\n        minZoom: 8,\n        tilt: 0,\n        zoomControlOptions: {\n          position: window.google.maps.ControlPosition.RIGHT_TOP\n        },\n        disableDoubleClickZoom: false,\n        restriction: {\n          latLngBounds: {\n            north: 38.0,\n            south: 34.5,\n            east: 131.0,\n            west: 125.0\n          },\n          strictBounds: false\n        }\n      });\n\n      console.log('지도 인스턴스 생성 완료:', map);\n      mapInstance.current = map;\n      createMarkers();\n\n      map.addListener('zoom_changed', () => {\n        if (isClusterClicking.current) {\n          return;\n        }\n        \n        markersRef.current.forEach(marker => {\n          if (marker && marker.setMap) {\n            marker.setMap(null);\n          }\n        });\n        markersRef.current = [];\n\n        setTimeout(() => {\n          if (!isClusterClicking.current) {\n            createMarkers();\n          }\n        }, 300);\n      });\n\n      console.log('지도 초기화 완료');\n      setIsMapLoaded(true);\n      setMapError(null);\n      return true;\n    } catch (error) {\n      console.error('지도 초기화 오류:', error);\n      setMapError('지도를 로드할 수 없습니다. Google Maps API를 확인해주세요.');\n      setIsMapLoaded(false);\n      return false;\n    }\n  };\n\n  const createMarkers = () => {\n    if (!mapInstance.current) return;\n    \n    const currentZoom = mapInstance.current.getZoom();\n    \n    if (currentZoom >= 18) {\n      properties.forEach((property, index) => {\n        const isSelected = selectedMarkerId === property.id;\n        const marker = new window.google.maps.Marker({\n          position: property.location,\n          map: mapInstance.current,\n          title: property.title,\n          icon: {\n            url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(\n              isSelected\n                ? `<svg width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"22\" cy=\"22\" r=\"20\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/><text x=\"22\" y=\"29\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"16\" font-weight=\"bold\">1</text></svg>`\n                : `<svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"15\" cy=\"15\" r=\"13\" fill=\"#2563eb\" stroke=\"#1e40af\" stroke-width=\"2\"/><text x=\"15\" y=\"19\" text-anchor=\"middle\" fill=\"white\" font-family=\"Arial, sans-serif\" font-size=\"10\" font-weight=\"bold\">1</text></svg>`\n            ),\n            scaledSize: isSelected\n              ? new window.google.maps.Size(44, 44)\n              : new window.google.maps.Size(30, 30),\n            anchor: isSelected\n              ? new window.google.maps.Point(22, 22)\n              : new window.google.maps.Point(15, 15)\n          }\n        });\n\n        if (onMarkerClick) {\n          marker.addListener('click', () => {\n            console.log(`개별 마커 클릭됨: ${property.id} - ${property.title}`);\n            isClusterClicking.current = true;\n            \n            if (setSelectedMarkerId) setSelectedMarkerId(property.id);\n            if (setSelectedClusterId) setSelectedClusterId('');\n            onMarkerClick(property);\n            \n            setTimeout(() => {\n              isClusterClicking.current = false;\n            }, 1500);\n          });\n        }\n\n        markersRef.current.push(marker);\n      });\n    } else {\n      const clusters = clusterMarkers([], currentZoom);\n\n      clusters.forEach((cluster, clusterIndex) => {\n        if (cluster.properties.length === 1) {\n          const property = cluster.properties[0];\n          const isSelected = selectedMarkerId === property.id;\n          const marker = new window.google.maps.Marker({\n            position: property.location,\n            map: mapInstance.current,\n            title: property.title,\n            icon: {\n              url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(\n                isSelected\n                  ? `<svg width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"22\" cy=\"22\" r=\"20\" fill=\"white\" stroke=\"#111\" stroke-width=\"3\"/><text x=\"22\" y=\"29\" text-anchor=\"middle\" fill=\"#111\" font-family=\"Arial, sans-serif\" font-size=\"16\" font-weight=\"bold\">1</text></svg>`\n                  : `<svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"15\" cy=\"15\" r=\"13\" fill=\"#2563eb\" stroke=\"#1e40af\" stroke-width=\"2\"/><text x=\"15\" y=\"19\" text-anchor=\"middle\" fill=\"white\" font-family=\"Arial, sans-serif\" font-size=\"10\" font-weight=\"bold\">1</text></svg>`\n              ),\n              scaledSize: isSelected\n                ? new window.google.maps.Size(44, 44)\n                : new window.google.maps.Size(30, 30),\n              anchor: isSelected\n                ? new window.google.maps.Point(22, 22)\n                : new window.google.maps.Point(15, 15)\n            }\n          });\n\n          if (onMarkerClick) {\n            marker.addListener('click', () => {\n              console.log(`클러스터링된 단일 마커 클릭됨: ${property.id} - ${property.title}`);\n              isClusterClicking.current = true;\n              \n              if (setSelectedMarkerId) setSelectedMarkerId(property.id);\n              if (setSelectedClusterId) setSelectedClusterId('');\n              onMarkerClick(property);\n              \n              setTimeout(() => {\n                isClusterClicking.current = false;\n              }, 1500);\n            });\n          }\n\n          markersRef.current.push(marker);\n        } else {\n          const clusterMarker = createClusterMarker(cluster.properties, cluster.center);\n          markersRef.current.push(clusterMarker);\n        }\n      });\n    }\n  };\n\n  const updateMarkers = () => {\n    if (!mapInstance.current) return;\n    \n    markersRef.current.forEach(marker => {\n      if (marker && marker.setMap) {\n        marker.setMap(null);\n      }\n    });\n    markersRef.current = [];\n\n    createMarkers();\n  };\n\n  const checkAndInit = useCallback(() => {\n    console.log('Google Maps API 확인 중...');\n    if (window.google && window.google.maps) {\n      console.log('Google Maps API 로드됨, 지도 초기화 시도');\n      if (initMap()) {\n        console.log('지도 초기화 성공');\n        return;\n      }\n    } else {\n      console.log('Google Maps API 아직 로드되지 않음, 재시도...');\n    }\n    \n    setTimeout(checkAndInit, 100);\n  }, []);\n\n  useEffect(() => {\n    checkAndInit();\n\n    return () => {\n      markersRef.current.forEach(marker => {\n        if (marker && marker.setMap) {\n          marker.setMap(null);\n        }\n      });\n      markersRef.current = [];\n    };\n  }, [checkAndInit, properties, onMarkerClick, onClusterClick, selectedMarkerId, setSelectedMarkerId, selectedClusterId, setSelectedClusterId]);\n\n  return (\n    <MapContainer>\n      {!isMapLoaded && mapError ? (\n        <FallbackMap>\n          <MapError>\n            <div style={{ marginBottom: '1rem', fontSize: '1.5rem' }}>🗺️</div>\n            <div style={{ marginBottom: '0.5rem', fontWeight: 'bold' }}>지도 로드 실패</div>\n            <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>{mapError}</div>\n            <button \n              onClick={() => {\n                setMapError(null);\n                setIsMapLoaded(false);\n                checkAndInit();\n              }}\n              style={{\n                marginTop: '1rem',\n                padding: '0.5rem 1rem',\n                background: '#2563eb',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              다시 시도\n            </button>\n          </MapError>\n        </FallbackMap>\n      ) : (\n        <div ref={mapRef} style={{ width: '100%', height: '100%' }} />\n      )}\n    </MapContainer>\n  );\n};\n\nexport default GoogleMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}