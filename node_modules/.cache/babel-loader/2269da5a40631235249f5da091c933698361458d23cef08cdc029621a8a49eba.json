{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\\\uC9C0\\uB3C4\\uAE30\\uBC18\\uC0AC\\uC774\\uD2B8\\uB9CC\\uB4E4\\uAE30\\\\src\\\\components\\\\Header.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderContainer = styled.header`\n  background: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  padding: 1rem 2rem;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n\n  @media (max-width: 768px) {\n    padding: 0.75rem 1rem;\n  }\n`;\n_c = HeaderContainer;\nconst MainSection = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  max-width: 1200px;\n  margin: 0 auto;\n  gap: 0.75rem;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 0.5rem;\n    align-items: stretch;\n  }\n`;\n_c2 = MainSection;\nconst LogoSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1px;\n  flex-shrink: 0;\n  margin-right: 0.75rem;\n\n  @media (max-width: 768px) {\n    margin-right: 0;\n    justify-content: center;\n  }\n`;\n_c3 = LogoSection;\nconst Logo = styled.img`\n  width: 80px;\n  height: 60px;\n  object-fit: contain;\n\n  @media (max-width: 768px) {\n    width: 60px;\n    height: 45px;\n  }\n`;\n_c4 = Logo;\nconst CompanyInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.1rem;\n\n  @media (max-width: 768px) {\n    align-items: center;\n  }\n`;\n_c5 = CompanyInfo;\nconst CompanyName = styled.h1`\n  font-size: 1.75rem;\n  font-weight: bold;\n  color: #1f2937;\n  margin: 0;\n  line-height: 1.1;\n\n  @media (max-width: 768px) {\n    font-size: 1.5rem;\n  }\n`;\n_c6 = CompanyName;\nconst CompanyType = styled.p`\n  font-size: 1rem;\n  color: #666;\n  margin: 0;\n  white-space: nowrap;\n  line-height: 1.1;\n\n  @media (max-width: 768px) {\n    font-size: 0.875rem;\n  }\n`;\n_c7 = CompanyType;\nconst SearchSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.4rem;\n  flex: 1;\n  max-width: 700px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 0.5rem;\n    max-width: none;\n  }\n`;\n_c8 = SearchSection;\nconst SearchInput = styled.input`\n  flex: 2.5;\n  padding: 0.5rem;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 12px;\n  color: #000;\n\n  &:focus {\n    outline: none;\n    border-color: #2563eb;\n    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);\n  }\n\n  @media (max-width: 768px) {\n    flex: none;\n    width: 100%;\n    font-size: 14px;\n    padding: 0.75rem;\n  }\n`;\n_c9 = SearchInput;\nconst AddressInput = styled.input`\n  flex: 2.5;\n  padding: 0.5rem;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 12px;\n  color: #000;\n\n  &:focus {\n    outline: none;\n    border-color: #2563eb;\n    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);\n  }\n\n  @media (max-width: 768px) {\n    flex: none;\n    width: 100%;\n    font-size: 14px;\n    padding: 0.75rem;\n  }\n`;\n_c0 = AddressInput;\nconst FilterButton = styled.button`\n  min-width: 60px;\n  padding: 0.5rem;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: ${props => props.isActive ? '#2563eb' : '#f9fafb'};\n  color: ${props => props.isActive ? 'white' : '#374151'};\n  font-size: 12px;\n  cursor: pointer;\n  white-space: nowrap;\n  transition: all 0.2s ease;\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n\n  &:hover {\n    background: ${props => props.isActive ? '#1d4ed8' : '#f3f4f6'};\n  }\n\n  &::after {\n    content: '▼';\n    font-size: 8px;\n    transition: transform 0.2s ease;\n    transform: ${props => props.isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n  }\n\n  @media (max-width: 768px) {\n    min-width: auto;\n    width: 100%;\n    font-size: 14px;\n    padding: 0.75rem;\n  }\n`;\n_c1 = FilterButton;\nconst DropdownMenu = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  max-height: ${props => props.isOpen ? '800px' : '0'};\n  overflow: hidden;\n  transition: all 0.2s ease;\n  margin-top: 2px;\n  min-width: 400px;\n`;\n_c10 = DropdownMenu;\nconst PriceFilterContainer = styled.div`\n  padding: 0.75rem;\n`;\n_c11 = PriceFilterContainer;\nconst FilterTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.75rem;\n  font-weight: bold;\n  font-size: 14px;\n`;\n_c12 = FilterTitle;\nconst ResetButton = styled.button`\n  background: none;\n  border: none;\n  color: #dc2626;\n  font-size: 12px;\n  cursor: pointer;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  \n  &:hover {\n    background: #fef2f2;\n  }\n`;\n_c13 = ResetButton;\nconst PriceGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 0.5rem;\n  margin-bottom: 0.75rem;\n`;\n_c14 = PriceGrid;\nconst PriceButton = styled.button`\n  padding: 0.5rem;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  background: ${props => {\n  if (props.isActive) return '#1e40af';\n  if (props.isInRange) return '#e0f2fe';\n  if (props.isSelected) return '#dbeafe';\n  return 'white';\n}};\n  color: ${props => {\n  if (props.isActive) return 'white';\n  if (props.isInRange) return '#0369a1';\n  if (props.isSelected) return '#1e40af';\n  return '#374151';\n}};\n  font-size: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-weight: ${props => props.isActive ? 'bold' : 'normal'};\n\n  &:hover {\n    background: ${props => props.isActive ? '#1e3a8a' : '#f3f4f6'};\n  }\n`;\n_c15 = PriceButton;\nconst CustomRangeContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 0.75rem;\n`;\n_c16 = CustomRangeContainer;\nconst RangeInput = styled.input`\n  flex: 1;\n  padding: 0.5rem;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 12px;\n  text-align: center;\n\n  &:focus {\n    outline: none;\n    border-color: #2563eb;\n  }\n`;\n_c17 = RangeInput;\nconst RangeSeparator = styled.span`\n  font-size: 12px;\n  color: #6b7280;\n`;\n_c18 = RangeSeparator;\nconst DepositFilterContainer = styled.div`\n  border-top: 1px solid #e5e7eb;\n  padding-top: 0.75rem;\n  margin-top: 0.75rem;\n`;\n_c19 = DepositFilterContainer;\nconst DepositSlider = styled.div`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 0.4rem;\n  margin-bottom: 0.75rem;\n`;\n_c20 = DepositSlider;\nconst DepositButton = styled.button`\n  padding: 0.5rem;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  background: ${props => {\n  if (props.isActive) return '#1e40af';\n  if (props.isInRange) return '#e0f2fe';\n  if (props.isSelected) return '#dbeafe';\n  return 'white';\n}};\n  color: ${props => {\n  if (props.isActive) return 'white';\n  if (props.isInRange) return '#0369a1';\n  if (props.isSelected) return '#1e40af';\n  return '#374151';\n}};\n  font-size: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  white-space: nowrap;\n  font-weight: ${props => props.isActive ? 'bold' : 'normal'};\n\n  &:hover {\n    background: ${props => props.isActive ? '#1e3a8a' : '#f3f4f6'};\n  }\n`;\n_c21 = DepositButton;\nconst GlobalResetButton = styled.button`\n  width: 100%;\n  padding: 0.75rem;\n  background: #dc2626;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 12px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: #b91c1c;\n  }\n`;\nconst DropdownOption = styled.button`\n  width: 100%;\n  padding: 0.5rem 0.75rem;\n  border: none;\n  background: ${props => props.isSelected ? '#2563eb' : 'white'};\n  color: ${props => props.isSelected ? 'white' : '#374151'};\n  font-size: 12px;\n  text-align: left;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${props => props.isSelected ? '#1d4ed8' : '#f9fafb'};\n  }\n\n  &:first-child {\n    border-radius: 6px 6px 0 0;\n  }\n\n  &:last-child {\n    border-radius: 0 0 6px 6px;\n  }\n`;\n_c22 = DropdownOption;\nconst FilterButtonContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n_c23 = FilterButtonContainer;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  flex-shrink: 0;\n  margin-left: auto;\n\n  @media (max-width: 768px) {\n    margin-left: 0;\n    width: 100%;\n    justify-content: center;\n  }\n`;\n_c24 = ButtonGroup;\nconst Button = styled.button`\n  padding: 0.5rem 0.75rem;\n  border-radius: 6px;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  border: none;\n  color: white;\n  background: ${props => props.variant === 'reset' ? '#dc2626' : '#2563eb'};\n  white-space: nowrap;\n\n  &:hover {\n    background: ${props => props.variant === 'reset' ? '#b91c1c' : '#1d4ed8'};\n  }\n\n  @media (max-width: 768px) {\n    flex: 1;\n    justify-content: center;\n    font-size: 14px;\n    padding: 0.75rem;\n  }\n`;\n_c25 = Button;\nconst Header = ({\n  onAddProperty,\n  searchTerm = '',\n  onSearchChange,\n  addressSearch = '',\n  onAddressSearchChange,\n  filters = {\n    type: '',\n    propertyType: '',\n    area: '',\n    price: '',\n    deposit: ''\n  },\n  onFilterChange\n}) => {\n  _s();\n  const [openDropdown, setOpenDropdown] = useState(null);\n  const [priceRange, setPriceRange] = useState({\n    min: '',\n    max: ''\n  });\n  const [depositRange, setDepositRange] = useState({\n    min: '',\n    max: ''\n  });\n  const [areaRange, setAreaRange] = useState({\n    min: '',\n    max: ''\n  });\n  const [selectedPrices, setSelectedPrices] = useState([]);\n  const [selectedDeposits, setSelectedDeposits] = useState([]);\n  const [selectedAreas, setSelectedAreas] = useState([]);\n\n  // 가격 옵션들 (6x4 그리드)\n  const priceOptions = [['~1억', '2억', '3억', '4억', '5억', '6억'], ['7억', '8억', '9억', '10억', '15억', '20억'], ['30억', '40억', '50억', '60억', '70억', '80억'], ['90억', '100억', '200억', '300억', '400억', '500억~']];\n\n  // 보증금 옵션들\n  const depositOptions = ['~100만', '~500만', '~1천만', '~2천만', '~3천만', '~4천만'];\n\n  // 면적 옵션들 (4x4 그리드)\n  const areaOptions = [['~5평', '10평', '15평', '20평'], ['25평', '30평', '35평', '40평'], ['45평', '50평', '55평', '60평'], ['65평', '70평', '100평', '200평~']];\n\n  // 필터 옵션들\n  const filterOptions = {\n    type: [{\n      value: '',\n      label: '전체'\n    }, {\n      value: 'sale',\n      label: '매매'\n    }, {\n      value: 'rent',\n      label: '임대'\n    }],\n    propertyType: [{\n      value: '',\n      label: '전체'\n    }, {\n      value: 'commercial',\n      label: '상가'\n    }, {\n      value: 'office',\n      label: '사무실'\n    }, {\n      value: 'building',\n      label: '건물'\n    }, {\n      value: 'other',\n      label: '기타'\n    }]\n  };\n  const handleDropdownToggle = filterType => {\n    setOpenDropdown(openDropdown === filterType ? null : filterType);\n  };\n  const handleOptionSelect = (filterType, value) => {\n    const newFilters = {\n      ...filters,\n      [filterType]: filters[filterType] === value ? '' : value\n    };\n    onFilterChange === null || onFilterChange === void 0 ? void 0 : onFilterChange(newFilters);\n    setOpenDropdown(null);\n  };\n  const handlePriceSelect = price => {\n    let newSelectedPrices = [...selectedPrices];\n    if (newSelectedPrices.includes(price)) {\n      newSelectedPrices = newSelectedPrices.filter(p => p !== price);\n    } else {\n      if (newSelectedPrices.length >= 2) {\n        newSelectedPrices = [newSelectedPrices[1], price];\n      } else {\n        newSelectedPrices.push(price);\n      }\n    }\n    setSelectedPrices(newSelectedPrices);\n    if (newSelectedPrices.length === 1) {\n      if (newSelectedPrices[0] === '~1억') {\n        setPriceRange({\n          min: '최소값',\n          max: '1억'\n        });\n      } else if (newSelectedPrices[0] === '500억~') {\n        setPriceRange({\n          min: '500억',\n          max: '최대값'\n        });\n      } else {\n        setPriceRange({\n          min: newSelectedPrices[0],\n          max: newSelectedPrices[0]\n        });\n      }\n    } else if (newSelectedPrices.length === 2) {\n      const sorted = newSelectedPrices.sort((a, b) => {\n        const aValue = parseInt(a.replace(/[억~]/g, ''));\n        const bValue = parseInt(b.replace(/[억~]/g, ''));\n        return aValue - bValue;\n      });\n\n      // 최소값과 최대값 처리\n      let minValue = sorted[0];\n      let maxValue = sorted[1];\n      if (sorted[0] === '~1억') {\n        minValue = '최소값';\n      }\n      if (sorted[1] === '500억~') {\n        maxValue = '최대값';\n      }\n      setPriceRange({\n        min: minValue,\n        max: maxValue\n      });\n    } else {\n      setPriceRange({\n        min: '',\n        max: ''\n      });\n    }\n  };\n  const handleDepositSelect = deposit => {\n    let newSelectedDeposits = [...selectedDeposits];\n    if (newSelectedDeposits.includes(deposit)) {\n      newSelectedDeposits = newSelectedDeposits.filter(d => d !== deposit);\n    } else {\n      if (newSelectedDeposits.length >= 2) {\n        newSelectedDeposits = [newSelectedDeposits[1], deposit];\n      } else {\n        newSelectedDeposits.push(deposit);\n      }\n    }\n    setSelectedDeposits(newSelectedDeposits);\n    if (newSelectedDeposits.length === 1) {\n      setDepositRange({\n        min: newSelectedDeposits[0],\n        max: newSelectedDeposits[0]\n      });\n    } else if (newSelectedDeposits.length === 2) {\n      // 보증금 값에서 숫자만 추출하여 정렬\n      const sorted = newSelectedDeposits.sort((a, b) => {\n        let aValue = 0;\n        let bValue = 0;\n        if (a.includes('천만')) {\n          aValue = parseInt(a.replace(/[~천만]/g, '')) * 1000;\n        } else {\n          aValue = parseInt(a.replace(/[~만]/g, ''));\n        }\n        if (b.includes('천만')) {\n          bValue = parseInt(b.replace(/[~천만]/g, '')) * 1000;\n        } else {\n          bValue = parseInt(b.replace(/[~만]/g, ''));\n        }\n        return aValue - bValue;\n      });\n      setDepositRange({\n        min: sorted[0],\n        max: sorted[1]\n      });\n    } else {\n      setDepositRange({\n        min: '',\n        max: ''\n      });\n    }\n  };\n  const handleAreaSelect = area => {\n    let newSelectedAreas = [...selectedAreas];\n    if (newSelectedAreas.includes(area)) {\n      newSelectedAreas = newSelectedAreas.filter(a => a !== area);\n    } else {\n      if (newSelectedAreas.length >= 2) {\n        newSelectedAreas = [newSelectedAreas[1], area];\n      } else {\n        newSelectedAreas.push(area);\n      }\n    }\n    setSelectedAreas(newSelectedAreas);\n    if (newSelectedAreas.length === 1) {\n      if (newSelectedAreas[0] === '~5평') {\n        setAreaRange({\n          min: '0',\n          max: '5'\n        });\n      } else if (newSelectedAreas[0] === '200평~') {\n        setAreaRange({\n          min: '200',\n          max: '최대값'\n        });\n      } else {\n        setAreaRange({\n          min: newSelectedAreas[0],\n          max: newSelectedAreas[0]\n        });\n      }\n    } else if (newSelectedAreas.length === 2) {\n      const sorted = newSelectedAreas.sort((a, b) => {\n        const aValue = parseInt(a.replace(/[평~]/g, ''));\n        const bValue = parseInt(b.replace(/[평~]/g, ''));\n        return aValue - bValue;\n      });\n\n      // 최소값과 최대값 처리\n      let minValue = sorted[0];\n      let maxValue = sorted[1];\n      if (sorted[0] === '~5평') {\n        minValue = '0';\n      }\n      if (sorted[1] === '200평~') {\n        maxValue = '최대값';\n      }\n      setAreaRange({\n        min: minValue,\n        max: maxValue\n      });\n    } else {\n      setAreaRange({\n        min: '',\n        max: ''\n      });\n    }\n  };\n  const resetPriceFilter = () => {\n    setSelectedPrices([]);\n    setPriceRange({\n      min: '',\n      max: ''\n    });\n  };\n  const resetDepositFilter = () => {\n    setSelectedDeposits([]);\n    setDepositRange({\n      min: '',\n      max: ''\n    });\n  };\n  const resetAreaFilter = () => {\n    setSelectedAreas([]);\n    setAreaRange({\n      min: '',\n      max: ''\n    });\n  };\n  const resetAllFilters = () => {\n    resetPriceFilter();\n    resetDepositFilter();\n    resetAreaFilter();\n  };\n  const getFilterDisplayText = filterType => {\n    var _filterOptions;\n    const currentValue = filters[filterType];\n    if (!currentValue || currentValue === '') {\n      return filterType === 'type' ? '거래유형' : filterType === 'area' ? '면적' : filterType === 'price' ? '금액' : '매물종류';\n    }\n    const option = (_filterOptions = filterOptions[filterType]) === null || _filterOptions === void 0 ? void 0 : _filterOptions.find(opt => opt.value === currentValue);\n    return (option === null || option === void 0 ? void 0 : option.label) || currentValue;\n  };\n  const getPriceDisplayText = () => {\n    let displayText = '';\n    if (priceRange.min && priceRange.max) {\n      if (priceRange.min === priceRange.max) {\n        displayText = priceRange.min;\n      } else {\n        displayText = `${priceRange.min}~${priceRange.max}`;\n      }\n    }\n    if (depositRange.min && depositRange.max) {\n      if (depositRange.min === depositRange.max) {\n        displayText += displayText ? `, ${depositRange.min}` : depositRange.min;\n      } else {\n        displayText += displayText ? `, ${depositRange.min}~${depositRange.max}` : `${depositRange.min}~${depositRange.max}`;\n      }\n    }\n    return displayText || '금액';\n  };\n  const getDepositDisplayText = () => {\n    if (depositRange.min && depositRange.max) {\n      if (depositRange.min === depositRange.max) {\n        return depositRange.min;\n      }\n      return `${depositRange.min}~${depositRange.max}`;\n    }\n    return '보증금';\n  };\n  const getAreaDisplayText = () => {\n    if (areaRange.min && areaRange.max) {\n      if (areaRange.min === areaRange.max) {\n        return areaRange.min;\n      }\n      return `${areaRange.min}~${areaRange.max}`;\n    }\n    return '면적';\n  };\n\n  // 외부 클릭 시 드롭다운 닫기\n  React.useEffect(() => {\n    const handleClickOutside = event => {\n      if (openDropdown && !event.target.closest('.filter-dropdown')) {\n        setOpenDropdown(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [openDropdown]);\n  return /*#__PURE__*/_jsxDEV(HeaderContainer, {\n    children: /*#__PURE__*/_jsxDEV(MainSection, {\n      children: [/*#__PURE__*/_jsxDEV(LogoSection, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          src: \"/logo.png\",\n          alt: \"PA \\uB85C\\uACE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CompanyInfo, {\n          children: [/*#__PURE__*/_jsxDEV(CompanyName, {\n            children: \"\\uD53C\\uC5D0\\uC774\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CompanyType, {\n            children: \"\\uACF5\\uC778\\uC911\\uAC1C\\uC0AC\\uC0AC\\uBB34\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchSection, {\n        children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n          type: \"text\",\n          placeholder: \"\\uB9E4\\uBB3C\\uBC88\\uD638, \\uC81C\\uBAA9 \\uAC80\\uC0C9\",\n          value: searchTerm,\n          onChange: e => onSearchChange === null || onSearchChange === void 0 ? void 0 : onSearchChange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButtonContainer, {\n          className: \"filter-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n            isActive: filters.type !== '',\n            isOpen: openDropdown === 'type',\n            onClick: () => handleDropdownToggle('type'),\n            children: getFilterDisplayText('type')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n            isOpen: openDropdown === 'type',\n            children: filterOptions.type.map(option => /*#__PURE__*/_jsxDEV(DropdownOption, {\n              isSelected: filters.type === option.value,\n              onClick: () => handleOptionSelect('type', option.value),\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButtonContainer, {\n          className: \"filter-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n            isActive: areaRange.min !== '' || areaRange.max !== '',\n            isOpen: openDropdown === 'area',\n            onClick: () => handleDropdownToggle('area'),\n            children: getAreaDisplayText()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n            isOpen: openDropdown === 'area',\n            children: /*#__PURE__*/_jsxDEV(PriceFilterContainer, {\n              children: [/*#__PURE__*/_jsxDEV(FilterTitle, {\n                children: [\"\\uBA74\\uC801\", /*#__PURE__*/_jsxDEV(ResetButton, {\n                  onClick: resetAreaFilter,\n                  children: \"\\uCD08\\uAE30\\uD654\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 17\n              }, this), areaOptions.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(PriceGrid, {\n                children: row.map(area => /*#__PURE__*/_jsxDEV(PriceButton, {\n                  isSelected: selectedAreas.includes(area),\n                  isActive: (() => {\n                    if (areaRange.min === '0' && area === '~5평') return true;\n                    if (areaRange.max === '최대값' && area === '200평~') return true;\n                    return areaRange.min === area || areaRange.max === area;\n                  })(),\n                  isInRange: (() => {\n                    if (areaRange.min === '' || areaRange.max === '') return false;\n                    const areaValue = parseInt(area.replace(/[평~]/g, ''));\n                    let minValue = 0;\n                    let maxValue = 999;\n\n                    // 최소값과 최대값 추출\n                    if (areaRange.min !== '') {\n                      if (areaRange.min === '0') {\n                        minValue = 0;\n                      } else {\n                        minValue = parseInt(areaRange.min.replace(/[평~]/g, ''));\n                      }\n                    }\n                    if (areaRange.max !== '') {\n                      if (areaRange.max === '최대값') {\n                        maxValue = 999;\n                      } else {\n                        maxValue = parseInt(areaRange.max.replace(/[평~]/g, ''));\n                      }\n                    }\n                    return areaValue > minValue && areaValue < maxValue && !selectedAreas.includes(area) && area !== areaRange.min && area !== areaRange.max;\n                  })(),\n                  onClick: () => handleAreaSelect(area),\n                  children: area\n                }, area, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 779,\n                  columnNumber: 23\n                }, this))\n              }, rowIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(CustomRangeContainer, {\n                children: [/*#__PURE__*/_jsxDEV(RangeInput, {\n                  type: \"text\",\n                  placeholder: \"\\uCD5C\\uC18C\",\n                  value: areaRange.min === '0' ? '' : areaRange.min === '200' ? '200' : areaRange.min,\n                  onChange: e => setAreaRange({\n                    ...areaRange,\n                    min: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RangeSeparator, {\n                  children: \"~\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 829,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RangeInput, {\n                  type: \"text\",\n                  placeholder: \"\\uCD5C\\uB300\",\n                  value: areaRange.max === '최대값' ? '' : areaRange.max === '5' ? '5' : areaRange.max,\n                  onChange: e => setAreaRange({\n                    ...areaRange,\n                    max: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 830,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RangeSeparator, {\n                  children: \"\\uD3C9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 836,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 822,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButtonContainer, {\n          className: \"filter-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n            isActive: filters.propertyType !== '',\n            isOpen: openDropdown === 'propertyType',\n            onClick: () => handleDropdownToggle('propertyType'),\n            children: getFilterDisplayText('propertyType')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n            isOpen: openDropdown === 'propertyType',\n            children: filterOptions.propertyType.map(option => /*#__PURE__*/_jsxDEV(DropdownOption, {\n              isSelected: filters.propertyType === option.value,\n              onClick: () => handleOptionSelect('propertyType', option.value),\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButtonContainer, {\n          className: \"filter-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n            isActive: priceRange.min !== '' || priceRange.max !== '',\n            isOpen: openDropdown === 'price',\n            onClick: () => handleDropdownToggle('price'),\n            children: getPriceDisplayText()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n            isOpen: openDropdown === 'price',\n            children: /*#__PURE__*/_jsxDEV(PriceFilterContainer, {\n              children: [/*#__PURE__*/_jsxDEV(FilterTitle, {\n                children: [\"\\uB9E4\\uB9E4\\uAC00\", /*#__PURE__*/_jsxDEV(ResetButton, {\n                  onClick: resetPriceFilter,\n                  children: \"\\uCD08\\uAE30\\uD654\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 875,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 873,\n                columnNumber: 17\n              }, this), priceOptions.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(PriceGrid, {\n                children: row.map(price => /*#__PURE__*/_jsxDEV(PriceButton, {\n                  isSelected: selectedPrices.includes(price),\n                  isActive: (() => {\n                    if (priceRange.min === '최소값' && price === '~1억') return true;\n                    if (priceRange.max === '최대값' && price === '500억~') return true;\n                    return priceRange.min === price || priceRange.max === price;\n                  })(),\n                  isInRange: (() => {\n                    if (priceRange.min === '' || priceRange.max === '') return false;\n                    const priceValue = parseInt(price.replace(/[억~]/g, ''));\n                    let minValue = 0;\n                    let maxValue = 999;\n\n                    // 최소값과 최대값 추출\n                    if (priceRange.min !== '') {\n                      if (priceRange.min === '최소값') {\n                        minValue = 0;\n                      } else {\n                        minValue = parseInt(priceRange.min.replace(/[억~]/g, ''));\n                      }\n                    }\n                    if (priceRange.max !== '') {\n                      if (priceRange.max === '최대값') {\n                        maxValue = 999;\n                      } else {\n                        maxValue = parseInt(priceRange.max.replace(/[억~]/g, ''));\n                      }\n                    }\n                    return priceValue > minValue && priceValue < maxValue && !selectedPrices.includes(price) && price !== priceRange.min && price !== priceRange.max;\n                  })(),\n                  onClick: () => handlePriceSelect(price),\n                  children: price\n                }, price, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 881,\n                  columnNumber: 23\n                }, this))\n              }, rowIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 879,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(CustomRangeContainer, {\n                children: [/*#__PURE__*/_jsxDEV(RangeInput, {\n                  type: \"text\",\n                  placeholder: \"\\uCD5C\\uC18C\",\n                  value: priceRange.min === '최소값' ? '' : priceRange.min === '1억' ? '1' : priceRange.min === '500억' ? '500' : priceRange.min,\n                  onChange: e => setPriceRange({\n                    ...priceRange,\n                    min: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RangeSeparator, {\n                  children: \"~\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 931,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RangeInput, {\n                  type: \"text\",\n                  placeholder: \"\\uCD5C\\uB300\",\n                  value: priceRange.max === '최대값' ? '' : priceRange.max === '1억' ? '1' : priceRange.max === '500억' ? '500' : priceRange.max,\n                  onChange: e => setPriceRange({\n                    ...priceRange,\n                    max: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 932,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RangeSeparator, {\n                  children: \"\\uC6D0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 938,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DepositFilterContainer, {\n                children: [/*#__PURE__*/_jsxDEV(FilterTitle, {\n                  children: [\"\\uBCF4\\uC99D\\uAE08\", /*#__PURE__*/_jsxDEV(ResetButton, {\n                    onClick: resetDepositFilter,\n                    children: \"\\uCD08\\uAE30\\uD654\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 944,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 942,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(DepositSlider, {\n                  children: depositOptions.map(deposit => /*#__PURE__*/_jsxDEV(DepositButton, {\n                    isSelected: selectedDeposits.includes(deposit),\n                    isActive: depositRange.min === deposit || depositRange.max === deposit,\n                    isInRange: (() => {\n                      if (depositRange.min === '' || depositRange.max === '') return false;\n\n                      // 보증금 값에서 숫자만 추출 (예: \"~100만\" -> 100, \"~1천만\" -> 1000)\n                      let depositValue = 0;\n                      if (deposit.includes('천만')) {\n                        depositValue = parseInt(deposit.replace(/[~천만]/g, '')) * 1000;\n                      } else {\n                        depositValue = parseInt(deposit.replace(/[~만]/g, ''));\n                      }\n                      let minValue = 0;\n                      let maxValue = 999;\n\n                      // 최소값과 최대값 추출\n                      if (depositRange.min !== '') {\n                        if (depositRange.min.includes('천만')) {\n                          minValue = parseInt(depositRange.min.replace(/[~천만]/g, '')) * 1000;\n                        } else {\n                          minValue = parseInt(depositRange.min.replace(/[~만]/g, ''));\n                        }\n                      }\n                      if (depositRange.max !== '') {\n                        if (depositRange.max.includes('천만')) {\n                          maxValue = parseInt(depositRange.max.replace(/[~천만]/g, '')) * 1000;\n                        } else {\n                          maxValue = parseInt(depositRange.max.replace(/[~만]/g, ''));\n                        }\n                      }\n\n                      // 선택된 범위 내에 있고, 선택되지 않은 경우\n                      return depositValue > minValue && depositValue < maxValue && !selectedDeposits.includes(deposit) && deposit !== depositRange.min && deposit !== depositRange.max;\n                    })(),\n                    onClick: () => handleDepositSelect(deposit),\n                    children: deposit\n                  }, deposit, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 949,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 947,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CustomRangeContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(RangeInput, {\n                    type: \"text\",\n                    placeholder: \"\\uCD5C\\uC18C\",\n                    value: depositRange.min,\n                    onChange: e => setDepositRange({\n                      ...depositRange,\n                      min: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 996,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RangeSeparator, {\n                    children: \"~\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1002,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RangeInput, {\n                    type: \"text\",\n                    placeholder: \"\\uCD5C\\uB300\",\n                    value: depositRange.max,\n                    onChange: e => setDepositRange({\n                      ...depositRange,\n                      max: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1003,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RangeSeparator, {\n                    children: \"\\uC6D0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1009,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 995,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddressInput, {\n          type: \"text\",\n          placeholder: \"\\uC8FC\\uC18C \\uAC80\\uC0C9\",\n          value: addressSearch,\n          onChange: e => onAddressSearchChange === null || onAddressSearchChange === void 0 ? void 0 : onAddressSearchChange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"reset\",\n          onClick: () => window.location.reload(),\n          children: \"\\uD83D\\uDD04 \\uCD08\\uAE30\\uD654\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"upload\",\n          onClick: onAddProperty,\n          children: \"\\uD83D\\uDCE4 \\uB300\\uB7C9 \\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 722,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"CqLluCXhyYpXKL3ah2+F0dH3SYU=\");\n_c26 = Header;\nexport default Header;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26;\n$RefreshReg$(_c, \"HeaderContainer\");\n$RefreshReg$(_c2, \"MainSection\");\n$RefreshReg$(_c3, \"LogoSection\");\n$RefreshReg$(_c4, \"Logo\");\n$RefreshReg$(_c5, \"CompanyInfo\");\n$RefreshReg$(_c6, \"CompanyName\");\n$RefreshReg$(_c7, \"CompanyType\");\n$RefreshReg$(_c8, \"SearchSection\");\n$RefreshReg$(_c9, \"SearchInput\");\n$RefreshReg$(_c0, \"AddressInput\");\n$RefreshReg$(_c1, \"FilterButton\");\n$RefreshReg$(_c10, \"DropdownMenu\");\n$RefreshReg$(_c11, \"PriceFilterContainer\");\n$RefreshReg$(_c12, \"FilterTitle\");\n$RefreshReg$(_c13, \"ResetButton\");\n$RefreshReg$(_c14, \"PriceGrid\");\n$RefreshReg$(_c15, \"PriceButton\");\n$RefreshReg$(_c16, \"CustomRangeContainer\");\n$RefreshReg$(_c17, \"RangeInput\");\n$RefreshReg$(_c18, \"RangeSeparator\");\n$RefreshReg$(_c19, \"DepositFilterContainer\");\n$RefreshReg$(_c20, \"DepositSlider\");\n$RefreshReg$(_c21, \"DepositButton\");\n$RefreshReg$(_c22, \"DropdownOption\");\n$RefreshReg$(_c23, \"FilterButtonContainer\");\n$RefreshReg$(_c24, \"ButtonGroup\");\n$RefreshReg$(_c25, \"Button\");\n$RefreshReg$(_c26, \"Header\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","HeaderContainer","header","_c","MainSection","div","_c2","LogoSection","_c3","Logo","img","_c4","CompanyInfo","_c5","CompanyName","h1","_c6","CompanyType","p","_c7","SearchSection","_c8","SearchInput","input","_c9","AddressInput","_c0","FilterButton","button","props","isActive","isOpen","_c1","DropdownMenu","_c10","PriceFilterContainer","_c11","FilterTitle","_c12","ResetButton","_c13","PriceGrid","_c14","PriceButton","isInRange","isSelected","_c15","CustomRangeContainer","_c16","RangeInput","_c17","RangeSeparator","span","_c18","DepositFilterContainer","_c19","DepositSlider","_c20","DepositButton","_c21","GlobalResetButton","DropdownOption","_c22","FilterButtonContainer","_c23","ButtonGroup","_c24","Button","variant","_c25","Header","onAddProperty","searchTerm","onSearchChange","addressSearch","onAddressSearchChange","filters","type","propertyType","area","price","deposit","onFilterChange","_s","openDropdown","setOpenDropdown","priceRange","setPriceRange","min","max","depositRange","setDepositRange","areaRange","setAreaRange","selectedPrices","setSelectedPrices","selectedDeposits","setSelectedDeposits","selectedAreas","setSelectedAreas","priceOptions","depositOptions","areaOptions","filterOptions","value","label","handleDropdownToggle","filterType","handleOptionSelect","newFilters","handlePriceSelect","newSelectedPrices","includes","filter","length","push","sorted","sort","a","b","aValue","parseInt","replace","bValue","minValue","maxValue","handleDepositSelect","newSelectedDeposits","d","handleAreaSelect","newSelectedAreas","resetPriceFilter","resetDepositFilter","resetAreaFilter","resetAllFilters","getFilterDisplayText","_filterOptions","currentValue","option","find","opt","getPriceDisplayText","displayText","getDepositDisplayText","getAreaDisplayText","useEffect","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","className","onClick","map","row","rowIndex","areaValue","priceValue","depositValue","window","location","reload","_c26","$RefreshReg$"],"sources":["C:/Users/user/지도기반사이트만들기/src/components/Header.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderContainer = styled.header`\r\n  background: #fff;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  padding: 1rem 2rem;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1000;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 0.75rem 1rem;\r\n  }\r\n`;\r\n\r\nconst MainSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  gap: 0.75rem;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n    align-items: stretch;\r\n  }\r\n`;\r\n\r\nconst LogoSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1px;\r\n  flex-shrink: 0;\r\n  margin-right: 0.75rem;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-right: 0;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 80px;\r\n  height: 60px;\r\n  object-fit: contain;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 60px;\r\n    height: 45px;\r\n  }\r\n`;\r\n\r\nconst CompanyInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.1rem;\r\n\r\n  @media (max-width: 768px) {\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst CompanyName = styled.h1`\r\n  font-size: 1.75rem;\r\n  font-weight: bold;\r\n  color: #1f2937;\r\n  margin: 0;\r\n  line-height: 1.1;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst CompanyType = styled.p`\r\n  font-size: 1rem;\r\n  color: #666;\r\n  margin: 0;\r\n  white-space: nowrap;\r\n  line-height: 1.1;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 0.875rem;\r\n  }\r\n`;\r\n\r\nconst SearchSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.4rem;\r\n  flex: 1;\r\n  max-width: 700px;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n    max-width: none;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  flex: 2.5;\r\n  padding: 0.5rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 12px;\r\n  color: #000;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #2563eb;\r\n    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    flex: none;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    padding: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst AddressInput = styled.input`\r\n  flex: 2.5;\r\n  padding: 0.5rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 12px;\r\n  color: #000;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #2563eb;\r\n    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    flex: none;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    padding: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst FilterButton = styled.button<{ isActive?: boolean; isOpen?: boolean }>`\r\n  min-width: 60px;\r\n  padding: 0.5rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  background: ${props => props.isActive ? '#2563eb' : '#f9fafb'};\r\n  color: ${props => props.isActive ? 'white' : '#374151'};\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n  transition: all 0.2s ease;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.25rem;\r\n\r\n  &:hover {\r\n    background: ${props => props.isActive ? '#1d4ed8' : '#f3f4f6'};\r\n  }\r\n\r\n  &::after {\r\n    content: '▼';\r\n    font-size: 8px;\r\n    transition: transform 0.2s ease;\r\n    transform: ${props => props.isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    min-width: auto;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    padding: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst DropdownMenu = styled.div<{ isOpen: boolean }>`\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  right: 0;\r\n  background: white;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  z-index: 1000;\r\n  max-height: ${props => props.isOpen ? '800px' : '0'};\r\n  overflow: hidden;\r\n  transition: all 0.2s ease;\r\n  margin-top: 2px;\r\n  min-width: 400px;\r\n`;\r\n\r\nconst PriceFilterContainer = styled.div`\r\n  padding: 0.75rem;\r\n`;\r\n\r\nconst FilterTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.75rem;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst ResetButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: #dc2626;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 4px;\r\n  \r\n  &:hover {\r\n    background: #fef2f2;\r\n  }\r\n`;\r\n\r\nconst PriceGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  gap: 0.5rem;\r\n  margin-bottom: 0.75rem;\r\n`;\r\n\r\nconst PriceButton = styled.button<{ isSelected?: boolean; isActive?: boolean; isInRange?: boolean }>`\r\n  padding: 0.5rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 4px;\r\n  background: ${props => {\r\n    if (props.isActive) return '#1e40af';\r\n    if (props.isInRange) return '#e0f2fe';\r\n    if (props.isSelected) return '#dbeafe';\r\n    return 'white';\r\n  }};\r\n  color: ${props => {\r\n    if (props.isActive) return 'white';\r\n    if (props.isInRange) return '#0369a1';\r\n    if (props.isSelected) return '#1e40af';\r\n    return '#374151';\r\n  }};\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  font-weight: ${props => props.isActive ? 'bold' : 'normal'};\r\n\r\n  &:hover {\r\n    background: ${props => props.isActive ? '#1e3a8a' : '#f3f4f6'};\r\n  }\r\n`;\r\n\r\nconst CustomRangeContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  margin-bottom: 0.75rem;\r\n`;\r\n\r\nconst RangeInput = styled.input`\r\n  flex: 1;\r\n  padding: 0.5rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  text-align: center;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #2563eb;\r\n  }\r\n`;\r\n\r\nconst RangeSeparator = styled.span`\r\n  font-size: 12px;\r\n  color: #6b7280;\r\n`;\r\n\r\nconst DepositFilterContainer = styled.div`\r\n  border-top: 1px solid #e5e7eb;\r\n  padding-top: 0.75rem;\r\n  margin-top: 0.75rem;\r\n`;\r\n\r\nconst DepositSlider = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  gap: 0.4rem;\r\n  margin-bottom: 0.75rem;\r\n`;\r\n\r\nconst DepositButton = styled.button<{ isSelected?: boolean; isActive?: boolean; isInRange?: boolean }>`\r\n  padding: 0.5rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 4px;\r\n  background: ${props => {\r\n    if (props.isActive) return '#1e40af';\r\n    if (props.isInRange) return '#e0f2fe';\r\n    if (props.isSelected) return '#dbeafe';\r\n    return 'white';\r\n  }};\r\n  color: ${props => {\r\n    if (props.isActive) return 'white';\r\n    if (props.isInRange) return '#0369a1';\r\n    if (props.isSelected) return '#1e40af';\r\n    return '#374151';\r\n  }};\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  white-space: nowrap;\r\n  font-weight: ${props => props.isActive ? 'bold' : 'normal'};\r\n\r\n  &:hover {\r\n    background: ${props => props.isActive ? '#1e3a8a' : '#f3f4f6'};\r\n  }\r\n`;\r\n\r\nconst GlobalResetButton = styled.button`\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  background: #dc2626;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n\r\n  &:hover {\r\n    background: #b91c1c;\r\n  }\r\n`;\r\n\r\nconst DropdownOption = styled.button<{ isSelected?: boolean }>`\r\n  width: 100%;\r\n  padding: 0.5rem 0.75rem;\r\n  border: none;\r\n  background: ${props => props.isSelected ? '#2563eb' : 'white'};\r\n  color: ${props => props.isSelected ? 'white' : '#374151'};\r\n  font-size: 12px;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n\r\n  &:hover {\r\n    background: ${props => props.isSelected ? '#1d4ed8' : '#f9fafb'};\r\n  }\r\n\r\n  &:first-child {\r\n    border-radius: 6px 6px 0 0;\r\n  }\r\n\r\n  &:last-child {\r\n    border-radius: 0 0 6px 6px;\r\n  }\r\n`;\r\n\r\nconst FilterButtonContainer = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  flex-shrink: 0;\r\n  margin-left: auto;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-left: 0;\r\n    width: 100%;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button<{ variant: 'reset' | 'upload' }>`\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 6px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  border: none;\r\n  color: white;\r\n  background: ${props => props.variant === 'reset' ? '#dc2626' : '#2563eb'};\r\n  white-space: nowrap;\r\n\r\n  &:hover {\r\n    background: ${props => props.variant === 'reset' ? '#b91c1c' : '#1d4ed8'};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    flex: 1;\r\n    justify-content: center;\r\n    font-size: 14px;\r\n    padding: 0.75rem;\r\n  }\r\n`;\r\n\r\ninterface HeaderProps {\r\n  onAddProperty: () => void;\r\n  searchTerm?: string;\r\n  onSearchChange?: (value: string) => void;\r\n  addressSearch?: string;\r\n  onAddressSearchChange?: (value: string) => void;\r\n  filters?: {\r\n    type: string;\r\n    propertyType: string;\r\n    area: string;\r\n    price: string;\r\n    deposit: string;\r\n  };\r\n  onFilterChange?: (filters: any) => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ \r\n  onAddProperty, \r\n  searchTerm = '', \r\n  onSearchChange,\r\n  addressSearch = '',\r\n  onAddressSearchChange,\r\n  filters = { type: '', propertyType: '', area: '', price: '', deposit: '' },\r\n  onFilterChange\r\n}) => {\r\n  const [openDropdown, setOpenDropdown] = useState<string | null>(null);\r\n  const [priceRange, setPriceRange] = useState({ min: '', max: '' });\r\n  const [depositRange, setDepositRange] = useState({ min: '', max: '' });\r\n  const [areaRange, setAreaRange] = useState({ min: '', max: '' });\r\n  const [selectedPrices, setSelectedPrices] = useState<string[]>([]);\r\n  const [selectedDeposits, setSelectedDeposits] = useState<string[]>([]);\r\n  const [selectedAreas, setSelectedAreas] = useState<string[]>([]);\r\n\r\n  // 가격 옵션들 (6x4 그리드)\r\n  const priceOptions = [\r\n    ['~1억', '2억', '3억', '4억', '5억', '6억'],\r\n    ['7억', '8억', '9억', '10억', '15억', '20억'],\r\n    ['30억', '40억', '50억', '60억', '70억', '80억'],\r\n    ['90억', '100억', '200억', '300억', '400억', '500억~']\r\n  ];\r\n\r\n  // 보증금 옵션들\r\n  const depositOptions = [\r\n    '~100만', '~500만', '~1천만', \r\n    '~2천만', '~3천만', '~4천만'\r\n  ];\r\n\r\n  // 면적 옵션들 (4x4 그리드)\r\n  const areaOptions = [\r\n    ['~5평', '10평', '15평', '20평'],\r\n    ['25평', '30평', '35평', '40평'],\r\n    ['45평', '50평', '55평', '60평'],\r\n    ['65평', '70평', '100평', '200평~']\r\n  ];\r\n\r\n  // 필터 옵션들\r\n  const filterOptions = {\r\n    type: [\r\n      { value: '', label: '전체' },\r\n      { value: 'sale', label: '매매' },\r\n      { value: 'rent', label: '임대' }\r\n    ],\r\n    propertyType: [\r\n      { value: '', label: '전체' },\r\n      { value: 'commercial', label: '상가' },\r\n      { value: 'office', label: '사무실' },\r\n      { value: 'building', label: '건물' },\r\n      { value: 'other', label: '기타' }\r\n    ]\r\n  };\r\n\r\n  const handleDropdownToggle = (filterType: string) => {\r\n    setOpenDropdown(openDropdown === filterType ? null : filterType);\r\n  };\r\n\r\n  const handleOptionSelect = (filterType: string, value: string) => {\r\n    const newFilters = {\r\n      ...filters,\r\n      [filterType]: filters[filterType as keyof typeof filters] === value ? '' : value\r\n    };\r\n    onFilterChange?.(newFilters);\r\n    setOpenDropdown(null);\r\n  };\r\n\r\n  const handlePriceSelect = (price: string) => {\r\n    let newSelectedPrices = [...selectedPrices];\r\n    \r\n    if (newSelectedPrices.includes(price)) {\r\n      newSelectedPrices = newSelectedPrices.filter(p => p !== price);\r\n    } else {\r\n      if (newSelectedPrices.length >= 2) {\r\n        newSelectedPrices = [newSelectedPrices[1], price];\r\n      } else {\r\n        newSelectedPrices.push(price);\r\n      }\r\n    }\r\n    \r\n    setSelectedPrices(newSelectedPrices);\r\n    \r\n    if (newSelectedPrices.length === 1) {\r\n      if (newSelectedPrices[0] === '~1억') {\r\n        setPriceRange({ min: '최소값', max: '1억' });\r\n      } else if (newSelectedPrices[0] === '500억~') {\r\n        setPriceRange({ min: '500억', max: '최대값' });\r\n      } else {\r\n        setPriceRange({ min: newSelectedPrices[0], max: newSelectedPrices[0] });\r\n      }\r\n    } else if (newSelectedPrices.length === 2) {\r\n      const sorted = newSelectedPrices.sort((a, b) => {\r\n        const aValue = parseInt(a.replace(/[억~]/g, ''));\r\n        const bValue = parseInt(b.replace(/[억~]/g, ''));\r\n        return aValue - bValue;\r\n      });\r\n      \r\n      // 최소값과 최대값 처리\r\n      let minValue = sorted[0];\r\n      let maxValue = sorted[1];\r\n      \r\n      if (sorted[0] === '~1억') {\r\n        minValue = '최소값';\r\n      }\r\n      if (sorted[1] === '500억~') {\r\n        maxValue = '최대값';\r\n      }\r\n      \r\n      setPriceRange({ min: minValue, max: maxValue });\r\n    } else {\r\n      setPriceRange({ min: '', max: '' });\r\n    }\r\n  };\r\n\r\n  const handleDepositSelect = (deposit: string) => {\r\n    let newSelectedDeposits = [...selectedDeposits];\r\n    \r\n    if (newSelectedDeposits.includes(deposit)) {\r\n      newSelectedDeposits = newSelectedDeposits.filter(d => d !== deposit);\r\n    } else {\r\n      if (newSelectedDeposits.length >= 2) {\r\n        newSelectedDeposits = [newSelectedDeposits[1], deposit];\r\n      } else {\r\n        newSelectedDeposits.push(deposit);\r\n      }\r\n    }\r\n    \r\n    setSelectedDeposits(newSelectedDeposits);\r\n    \r\n    if (newSelectedDeposits.length === 1) {\r\n      setDepositRange({ min: newSelectedDeposits[0], max: newSelectedDeposits[0] });\r\n    } else if (newSelectedDeposits.length === 2) {\r\n      // 보증금 값에서 숫자만 추출하여 정렬\r\n      const sorted = newSelectedDeposits.sort((a, b) => {\r\n        let aValue = 0;\r\n        let bValue = 0;\r\n        \r\n        if (a.includes('천만')) {\r\n          aValue = parseInt(a.replace(/[~천만]/g, '')) * 1000;\r\n        } else {\r\n          aValue = parseInt(a.replace(/[~만]/g, ''));\r\n        }\r\n        \r\n        if (b.includes('천만')) {\r\n          bValue = parseInt(b.replace(/[~천만]/g, '')) * 1000;\r\n        } else {\r\n          bValue = parseInt(b.replace(/[~만]/g, ''));\r\n        }\r\n        \r\n        return aValue - bValue;\r\n      });\r\n      setDepositRange({ min: sorted[0], max: sorted[1] });\r\n    } else {\r\n      setDepositRange({ min: '', max: '' });\r\n    }\r\n  };\r\n\r\n  const handleAreaSelect = (area: string) => {\r\n    let newSelectedAreas = [...selectedAreas];\r\n    \r\n    if (newSelectedAreas.includes(area)) {\r\n      newSelectedAreas = newSelectedAreas.filter(a => a !== area);\r\n    } else {\r\n      if (newSelectedAreas.length >= 2) {\r\n        newSelectedAreas = [newSelectedAreas[1], area];\r\n      } else {\r\n        newSelectedAreas.push(area);\r\n      }\r\n    }\r\n    \r\n    setSelectedAreas(newSelectedAreas);\r\n    \r\n    if (newSelectedAreas.length === 1) {\r\n      if (newSelectedAreas[0] === '~5평') {\r\n        setAreaRange({ min: '0', max: '5' });\r\n      } else if (newSelectedAreas[0] === '200평~') {\r\n        setAreaRange({ min: '200', max: '최대값' });\r\n      } else {\r\n        setAreaRange({ min: newSelectedAreas[0], max: newSelectedAreas[0] });\r\n      }\r\n    } else if (newSelectedAreas.length === 2) {\r\n      const sorted = newSelectedAreas.sort((a, b) => {\r\n        const aValue = parseInt(a.replace(/[평~]/g, ''));\r\n        const bValue = parseInt(b.replace(/[평~]/g, ''));\r\n        return aValue - bValue;\r\n      });\r\n      \r\n      // 최소값과 최대값 처리\r\n      let minValue = sorted[0];\r\n      let maxValue = sorted[1];\r\n      \r\n      if (sorted[0] === '~5평') {\r\n        minValue = '0';\r\n      }\r\n      if (sorted[1] === '200평~') {\r\n        maxValue = '최대값';\r\n      }\r\n      \r\n      setAreaRange({ min: minValue, max: maxValue });\r\n    } else {\r\n      setAreaRange({ min: '', max: '' });\r\n    }\r\n  };\r\n\r\n  const resetPriceFilter = () => {\r\n    setSelectedPrices([]);\r\n    setPriceRange({ min: '', max: '' });\r\n  };\r\n\r\n  const resetDepositFilter = () => {\r\n    setSelectedDeposits([]);\r\n    setDepositRange({ min: '', max: '' });\r\n  };\r\n\r\n  const resetAreaFilter = () => {\r\n    setSelectedAreas([]);\r\n    setAreaRange({ min: '', max: '' });\r\n  };\r\n\r\n  const resetAllFilters = () => {\r\n    resetPriceFilter();\r\n    resetDepositFilter();\r\n    resetAreaFilter();\r\n  };\r\n\r\n  const getFilterDisplayText = (filterType: string) => {\r\n    const currentValue = filters[filterType as keyof typeof filters];\r\n    if (!currentValue || currentValue === '') {\r\n      return filterType === 'type' ? '거래유형' :\r\n             filterType === 'area' ? '면적' :\r\n             filterType === 'price' ? '금액' :\r\n             '매물종류';\r\n    }\r\n    \r\n    const option = filterOptions[filterType as keyof typeof filterOptions]?.find(opt => opt.value === currentValue);\r\n    return option?.label || currentValue;\r\n  };\r\n\r\n  const getPriceDisplayText = () => {\r\n    let displayText = '';\r\n    \r\n    if (priceRange.min && priceRange.max) {\r\n      if (priceRange.min === priceRange.max) {\r\n        displayText = priceRange.min;\r\n      } else {\r\n        displayText = `${priceRange.min}~${priceRange.max}`;\r\n      }\r\n    }\r\n    \r\n    if (depositRange.min && depositRange.max) {\r\n      if (depositRange.min === depositRange.max) {\r\n        displayText += displayText ? `, ${depositRange.min}` : depositRange.min;\r\n      } else {\r\n        displayText += displayText ? `, ${depositRange.min}~${depositRange.max}` : `${depositRange.min}~${depositRange.max}`;\r\n      }\r\n    }\r\n    \r\n    return displayText || '금액';\r\n  };\r\n\r\n  const getDepositDisplayText = () => {\r\n    if (depositRange.min && depositRange.max) {\r\n      if (depositRange.min === depositRange.max) {\r\n        return depositRange.min;\r\n      }\r\n      return `${depositRange.min}~${depositRange.max}`;\r\n    }\r\n    return '보증금';\r\n  };\r\n\r\n  const getAreaDisplayText = () => {\r\n    if (areaRange.min && areaRange.max) {\r\n      if (areaRange.min === areaRange.max) {\r\n        return areaRange.min;\r\n      }\r\n      return `${areaRange.min}~${areaRange.max}`;\r\n    }\r\n    return '면적';\r\n  };\r\n\r\n  // 외부 클릭 시 드롭다운 닫기\r\n  React.useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (openDropdown && !(event.target as Element).closest('.filter-dropdown')) {\r\n        setOpenDropdown(null);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, [openDropdown]);\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <MainSection>\r\n        <LogoSection>\r\n          <Logo src=\"/logo.png\" alt=\"PA 로고\" />\r\n          <CompanyInfo>\r\n            <CompanyName>피에이</CompanyName>\r\n            <CompanyType>공인중개사사무소</CompanyType>\r\n          </CompanyInfo>\r\n        </LogoSection>\r\n\r\n        <SearchSection>\r\n          <SearchInput\r\n            type=\"text\"\r\n            placeholder=\"매물번호, 제목 검색\"\r\n            value={searchTerm}\r\n            onChange={(e) => onSearchChange?.(e.target.value)}\r\n          />\r\n          \r\n          <FilterButtonContainer className=\"filter-dropdown\">\r\n            <FilterButton\r\n              isActive={filters.type !== ''}\r\n              isOpen={openDropdown === 'type'}\r\n              onClick={() => handleDropdownToggle('type')}\r\n            >\r\n              {getFilterDisplayText('type')}\r\n            </FilterButton>\r\n            <DropdownMenu isOpen={openDropdown === 'type'}>\r\n              {filterOptions.type.map((option) => (\r\n                <DropdownOption\r\n                  key={option.value}\r\n                  isSelected={filters.type === option.value}\r\n                  onClick={() => handleOptionSelect('type', option.value)}\r\n                >\r\n                  {option.label}\r\n                </DropdownOption>\r\n              ))}\r\n            </DropdownMenu>\r\n          </FilterButtonContainer>\r\n\r\n          <FilterButtonContainer className=\"filter-dropdown\">\r\n            <FilterButton\r\n              isActive={areaRange.min !== '' || areaRange.max !== ''}\r\n              isOpen={openDropdown === 'area'}\r\n              onClick={() => handleDropdownToggle('area')}\r\n            >\r\n              {getAreaDisplayText()}\r\n            </FilterButton>\r\n            <DropdownMenu isOpen={openDropdown === 'area'}>\r\n              <PriceFilterContainer>\r\n                <FilterTitle>\r\n                  면적\r\n                  <ResetButton onClick={resetAreaFilter}>초기화</ResetButton>\r\n                </FilterTitle>\r\n                \r\n                {areaOptions.map((row, rowIndex) => (\r\n                  <PriceGrid key={rowIndex}>\r\n                    {row.map((area) => (\r\n                      <PriceButton\r\n                        key={area}\r\n                        isSelected={selectedAreas.includes(area)}\r\n                        isActive={(() => {\r\n                          if (areaRange.min === '0' && area === '~5평') return true;\r\n                          if (areaRange.max === '최대값' && area === '200평~') return true;\r\n                          return areaRange.min === area || areaRange.max === area;\r\n                        })()}\r\n                        isInRange={(() => {\r\n                          if (areaRange.min === '' || areaRange.max === '') return false;\r\n                          \r\n                          const areaValue = parseInt(area.replace(/[평~]/g, ''));\r\n                          let minValue = 0;\r\n                          let maxValue = 999;\r\n                          \r\n                          // 최소값과 최대값 추출\r\n                          if (areaRange.min !== '') {\r\n                            if (areaRange.min === '0') {\r\n                              minValue = 0;\r\n                            } else {\r\n                              minValue = parseInt(areaRange.min.replace(/[평~]/g, ''));\r\n                            }\r\n                          }\r\n                          if (areaRange.max !== '') {\r\n                            if (areaRange.max === '최대값') {\r\n                              maxValue = 999;\r\n                            } else {\r\n                              maxValue = parseInt(areaRange.max.replace(/[평~]/g, ''));\r\n                            }\r\n                          }\r\n                          \r\n                          return areaValue > minValue && areaValue < maxValue && \r\n                                 !selectedAreas.includes(area) &&\r\n                                 area !== areaRange.min && area !== areaRange.max;\r\n                        })()}\r\n                        onClick={() => handleAreaSelect(area)}\r\n                      >\r\n                        {area}\r\n                      </PriceButton>\r\n                    ))}\r\n                  </PriceGrid>\r\n                ))}\r\n\r\n                <CustomRangeContainer>\r\n                  <RangeInput\r\n                    type=\"text\"\r\n                    placeholder=\"최소\"\r\n                    value={areaRange.min === '0' ? '' : areaRange.min === '200' ? '200' : areaRange.min}\r\n                    onChange={(e) => setAreaRange({ ...areaRange, min: e.target.value })}\r\n                  />\r\n                  <RangeSeparator>~</RangeSeparator>\r\n                  <RangeInput\r\n                    type=\"text\"\r\n                    placeholder=\"최대\"\r\n                    value={areaRange.max === '최대값' ? '' : areaRange.max === '5' ? '5' : areaRange.max}\r\n                    onChange={(e) => setAreaRange({ ...areaRange, max: e.target.value })}\r\n                  />\r\n                  <RangeSeparator>평</RangeSeparator>\r\n                </CustomRangeContainer>\r\n              </PriceFilterContainer>\r\n            </DropdownMenu>\r\n          </FilterButtonContainer>\r\n\r\n          <FilterButtonContainer className=\"filter-dropdown\">\r\n            <FilterButton\r\n              isActive={filters.propertyType !== ''}\r\n              isOpen={openDropdown === 'propertyType'}\r\n              onClick={() => handleDropdownToggle('propertyType')}\r\n            >\r\n              {getFilterDisplayText('propertyType')}\r\n            </FilterButton>\r\n            <DropdownMenu isOpen={openDropdown === 'propertyType'}>\r\n              {filterOptions.propertyType.map((option) => (\r\n                <DropdownOption\r\n                  key={option.value}\r\n                  isSelected={filters.propertyType === option.value}\r\n                  onClick={() => handleOptionSelect('propertyType', option.value)}\r\n                >\r\n                  {option.label}\r\n                </DropdownOption>\r\n              ))}\r\n            </DropdownMenu>\r\n          </FilterButtonContainer>\r\n\r\n          <FilterButtonContainer className=\"filter-dropdown\">\r\n            <FilterButton\r\n              isActive={priceRange.min !== '' || priceRange.max !== ''}\r\n              isOpen={openDropdown === 'price'}\r\n              onClick={() => handleDropdownToggle('price')}\r\n            >\r\n              {getPriceDisplayText()}\r\n            </FilterButton>\r\n            <DropdownMenu isOpen={openDropdown === 'price'}>\r\n              <PriceFilterContainer>\r\n                <FilterTitle>\r\n                  매매가\r\n                  <ResetButton onClick={resetPriceFilter}>초기화</ResetButton>\r\n                </FilterTitle>\r\n                \r\n                {priceOptions.map((row, rowIndex) => (\r\n                  <PriceGrid key={rowIndex}>\r\n                    {row.map((price) => (\r\n                      <PriceButton\r\n                        key={price}\r\n                        isSelected={selectedPrices.includes(price)}\r\n                        isActive={(() => {\r\n                          if (priceRange.min === '최소값' && price === '~1억') return true;\r\n                          if (priceRange.max === '최대값' && price === '500억~') return true;\r\n                          return priceRange.min === price || priceRange.max === price;\r\n                        })()}\r\n                        isInRange={(() => {\r\n                          if (priceRange.min === '' || priceRange.max === '') return false;\r\n                          \r\n                          const priceValue = parseInt(price.replace(/[억~]/g, ''));\r\n                          let minValue = 0;\r\n                          let maxValue = 999;\r\n                          \r\n                          // 최소값과 최대값 추출\r\n                          if (priceRange.min !== '') {\r\n                            if (priceRange.min === '최소값') {\r\n                              minValue = 0;\r\n                            } else {\r\n                              minValue = parseInt(priceRange.min.replace(/[억~]/g, ''));\r\n                            }\r\n                          }\r\n                          if (priceRange.max !== '') {\r\n                            if (priceRange.max === '최대값') {\r\n                              maxValue = 999;\r\n                            } else {\r\n                              maxValue = parseInt(priceRange.max.replace(/[억~]/g, ''));\r\n                            }\r\n                          }\r\n                          \r\n                          return priceValue > minValue && priceValue < maxValue && \r\n                                 !selectedPrices.includes(price) &&\r\n                                 price !== priceRange.min && price !== priceRange.max;\r\n                        })()}\r\n                        onClick={() => handlePriceSelect(price)}\r\n                      >\r\n                        {price}\r\n                      </PriceButton>\r\n                    ))}\r\n                  </PriceGrid>\r\n                ))}\r\n\r\n                <CustomRangeContainer>\r\n                  <RangeInput\r\n                    type=\"text\"\r\n                    placeholder=\"최소\"\r\n                    value={priceRange.min === '최소값' ? '' : priceRange.min === '1억' ? '1' : priceRange.min === '500억' ? '500' : priceRange.min}\r\n                    onChange={(e) => setPriceRange({ ...priceRange, min: e.target.value })}\r\n                  />\r\n                  <RangeSeparator>~</RangeSeparator>\r\n                  <RangeInput\r\n                    type=\"text\"\r\n                    placeholder=\"최대\"\r\n                    value={priceRange.max === '최대값' ? '' : priceRange.max === '1억' ? '1' : priceRange.max === '500억' ? '500' : priceRange.max}\r\n                    onChange={(e) => setPriceRange({ ...priceRange, max: e.target.value })}\r\n                  />\r\n                  <RangeSeparator>원</RangeSeparator>\r\n                </CustomRangeContainer>\r\n\r\n                <DepositFilterContainer>\r\n                  <FilterTitle>\r\n                    보증금\r\n                    <ResetButton onClick={resetDepositFilter}>초기화</ResetButton>\r\n                  </FilterTitle>\r\n                  \r\n                  <DepositSlider>\r\n                    {depositOptions.map((deposit) => (\r\n                      <DepositButton\r\n                        key={deposit}\r\n                        isSelected={selectedDeposits.includes(deposit)}\r\n                        isActive={depositRange.min === deposit || depositRange.max === deposit}\r\n                        isInRange={(() => {\r\n                          if (depositRange.min === '' || depositRange.max === '') return false;\r\n                          \r\n                          // 보증금 값에서 숫자만 추출 (예: \"~100만\" -> 100, \"~1천만\" -> 1000)\r\n                          let depositValue = 0;\r\n                          if (deposit.includes('천만')) {\r\n                            depositValue = parseInt(deposit.replace(/[~천만]/g, '')) * 1000;\r\n                          } else {\r\n                            depositValue = parseInt(deposit.replace(/[~만]/g, ''));\r\n                          }\r\n                          \r\n                          let minValue = 0;\r\n                          let maxValue = 999;\r\n                          \r\n                          // 최소값과 최대값 추출\r\n                          if (depositRange.min !== '') {\r\n                            if (depositRange.min.includes('천만')) {\r\n                              minValue = parseInt(depositRange.min.replace(/[~천만]/g, '')) * 1000;\r\n                            } else {\r\n                              minValue = parseInt(depositRange.min.replace(/[~만]/g, ''));\r\n                            }\r\n                          }\r\n                          if (depositRange.max !== '') {\r\n                            if (depositRange.max.includes('천만')) {\r\n                              maxValue = parseInt(depositRange.max.replace(/[~천만]/g, '')) * 1000;\r\n                            } else {\r\n                              maxValue = parseInt(depositRange.max.replace(/[~만]/g, ''));\r\n                            }\r\n                          }\r\n                          \r\n                          // 선택된 범위 내에 있고, 선택되지 않은 경우\r\n                          return depositValue > minValue && depositValue < maxValue && \r\n                                 !selectedDeposits.includes(deposit) &&\r\n                                 deposit !== depositRange.min && deposit !== depositRange.max;\r\n                        })()}\r\n                        onClick={() => handleDepositSelect(deposit)}\r\n                      >\r\n                        {deposit}\r\n                      </DepositButton>\r\n                    ))}\r\n                  </DepositSlider>\r\n\r\n                  <CustomRangeContainer>\r\n                    <RangeInput\r\n                      type=\"text\"\r\n                      placeholder=\"최소\"\r\n                      value={depositRange.min}\r\n                      onChange={(e) => setDepositRange({ ...depositRange, min: e.target.value })}\r\n                    />\r\n                    <RangeSeparator>~</RangeSeparator>\r\n                    <RangeInput\r\n                      type=\"text\"\r\n                      placeholder=\"최대\"\r\n                      value={depositRange.max}\r\n                      onChange={(e) => setDepositRange({ ...depositRange, max: e.target.value })}\r\n                    />\r\n                    <RangeSeparator>원</RangeSeparator>\r\n                  </CustomRangeContainer>\r\n                </DepositFilterContainer>\r\n              </PriceFilterContainer>\r\n            </DropdownMenu>\r\n          </FilterButtonContainer>\r\n\r\n          <AddressInput\r\n            type=\"text\"\r\n            placeholder=\"주소 검색\"\r\n            value={addressSearch}\r\n            onChange={(e) => onAddressSearchChange?.(e.target.value)}\r\n          />\r\n        </SearchSection>\r\n\r\n        <ButtonGroup>\r\n          <Button variant=\"reset\" onClick={() => window.location.reload()}>\r\n            🔄 초기화\r\n          </Button>\r\n          <Button variant=\"upload\" onClick={onAddProperty}>\r\n            📤 대량 업로드\r\n          </Button>\r\n        </ButtonGroup>\r\n      </MainSection>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGH,MAAM,CAACI,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAXIF,eAAe;AAarB,MAAMG,WAAW,GAAGN,MAAM,CAACO,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAbIF,WAAW;AAejB,MAAMG,WAAW,GAAGT,MAAM,CAACO,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAXID,WAAW;AAajB,MAAME,IAAI,GAAGX,MAAM,CAACY,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GATIF,IAAI;AAWV,MAAMG,WAAW,GAAGd,MAAM,CAACO,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GARID,WAAW;AAUjB,MAAME,WAAW,GAAGhB,MAAM,CAACiB,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAVIF,WAAW;AAYjB,MAAMG,WAAW,GAAGnB,MAAM,CAACoB,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAVIF,WAAW;AAYjB,MAAMG,aAAa,GAAGtB,MAAM,CAACO,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgB,GAAA,GAZID,aAAa;AAcnB,MAAME,WAAW,GAAGxB,MAAM,CAACyB,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GApBIF,WAAW;AAsBjB,MAAMG,YAAY,GAAG3B,MAAM,CAACyB,KAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GApBID,YAAY;AAsBlB,MAAME,YAAY,GAAG7B,MAAM,CAAC8B,MAAgD;AAC5E;AACA;AACA;AACA;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAACC,QAAQ,GAAG,SAAS,GAAG,SAAS;AAC/D,WAAWD,KAAK,IAAIA,KAAK,CAACC,QAAQ,GAAG,OAAO,GAAG,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBD,KAAK,IAAIA,KAAK,CAACC,QAAQ,GAAG,SAAS,GAAG,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBD,KAAK,IAAIA,KAAK,CAACE,MAAM,GAAG,gBAAgB,GAAG,cAAc;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAjCIL,YAAY;AAmClB,MAAMM,YAAY,GAAGnC,MAAM,CAACO,GAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgBwB,KAAK,IAAIA,KAAK,CAACE,MAAM,GAAG,OAAO,GAAG,GAAG;AACrD;AACA;AACA;AACA;AACA,CAAC;AAACG,IAAA,GAfID,YAAY;AAiBlB,MAAME,oBAAoB,GAAGrC,MAAM,CAACO,GAAG;AACvC;AACA,CAAC;AAAC+B,IAAA,GAFID,oBAAoB;AAI1B,MAAME,WAAW,GAAGvC,MAAM,CAACO,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACiC,IAAA,GAPID,WAAW;AASjB,MAAME,WAAW,GAAGzC,MAAM,CAAC8B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACY,IAAA,GAZID,WAAW;AAcjB,MAAME,SAAS,GAAG3C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}