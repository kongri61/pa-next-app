{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\\\uC9C0\\uB3C4\\uAE30\\uBC18\\uC0AC\\uC774\\uD2B8\\uB9CC\\uB4E4\\uAE30\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport AddPropertyModal from './components/AddPropertyModal';\nimport GlobalStyle from './styles/GlobalStyle';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n_c = AppContainer;\nconst MainContent = styled.main`\n  flex: 1;\n`;\n_c2 = MainContent;\nfunction App() {\n  _s();\n  const [isAddPropertyModalOpen, setIsAddPropertyModalOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [addressSearch, setAddressSearch] = useState('');\n  const [filters, setFilters] = useState({\n    type: '',\n    propertyType: '',\n    area: '',\n    price: '',\n    deposit: ''\n  });\n\n  // 관리자 권한 확인 (예: 특정 IP, 도메인, 또는 환경 변수 기반)\n  const isAdmin = () => {\n    // 방법 1: 특정 IP에서만 관리자 권한 부여\n    const allowedIPs = ['127.0.0.1', 'localhost', '192.168.1.100']; // 허용할 IP 목록\n    const currentIP = window.location.hostname;\n\n    // 방법 2: URL 파라미터로 관리자 모드 활성화\n    const urlParams = new URLSearchParams(window.location.search);\n    const adminMode = urlParams.get('admin');\n\n    // 방법 3: 환경 변수 기반 (빌드 시 설정)\n    const envAdmin = process.env.REACT_APP_ADMIN_MODE === 'true';\n\n    // 방법 4: 로컬 스토리지 기반 (개발자 도구에서 설정 가능)\n    const localStorageAdmin = localStorage.getItem('admin_mode') === 'true';\n\n    // 방법 5: 특정 도메인에서만 관리자 권한 부여\n    const allowedDomains = ['localhost', '127.0.0.1', 'your-admin-domain.com'];\n    const currentDomain = window.location.hostname;\n    return allowedIPs.includes(currentIP) || adminMode === 'true' || envAdmin || localStorageAdmin || allowedDomains.includes(currentDomain);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAddProperty: () => setIsAddPropertyModalOpen(true),\n        searchTerm: searchTerm,\n        onSearchChange: setSearchTerm,\n        addressSearch: addressSearch,\n        onAddressSearchChange: setAddressSearch,\n        filters: filters,\n        onFilterChange: setFilters,\n        isAdmin: isAdmin()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n        children: /*#__PURE__*/_jsxDEV(HomePage, {\n          searchTerm: searchTerm,\n          addressSearch: addressSearch,\n          filters: filters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), isAddPropertyModalOpen && /*#__PURE__*/_jsxDEV(AddPropertyModal, {\n      onClose: () => setIsAddPropertyModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"uNM+FGYf5oepSt3fzod8A9FzBx0=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","styled","Header","HomePage","AddPropertyModal","GlobalStyle","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContainer","div","_c","MainContent","main","_c2","App","_s","isAddPropertyModalOpen","setIsAddPropertyModalOpen","searchTerm","setSearchTerm","addressSearch","setAddressSearch","filters","setFilters","type","propertyType","area","price","deposit","isAdmin","allowedIPs","currentIP","window","location","hostname","urlParams","URLSearchParams","search","adminMode","get","envAdmin","process","env","REACT_APP_ADMIN_MODE","localStorageAdmin","localStorage","getItem","allowedDomains","currentDomain","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddProperty","onSearchChange","onAddressSearchChange","onFilterChange","onClose","_c3","$RefreshReg$"],"sources":["C:/Users/user/지도기반사이트만들기/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from './components/Header';\r\nimport HomePage from './pages/HomePage';\r\nimport AddPropertyModal from './components/AddPropertyModal';\r\nimport GlobalStyle from './styles/GlobalStyle';\r\n\r\nconst AppContainer = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst MainContent = styled.main`\r\n  flex: 1;\r\n`;\r\n\r\nfunction App() {\r\n  const [isAddPropertyModalOpen, setIsAddPropertyModalOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [addressSearch, setAddressSearch] = useState('');\r\n  const [filters, setFilters] = useState({\r\n    type: '',\r\n    propertyType: '',\r\n    area: '',\r\n    price: '',\r\n    deposit: ''\r\n  });\r\n\r\n  // 관리자 권한 확인 (예: 특정 IP, 도메인, 또는 환경 변수 기반)\r\n  const isAdmin = () => {\r\n    // 방법 1: 특정 IP에서만 관리자 권한 부여\r\n    const allowedIPs = ['127.0.0.1', 'localhost', '192.168.1.100']; // 허용할 IP 목록\r\n    const currentIP = window.location.hostname;\r\n    \r\n    // 방법 2: URL 파라미터로 관리자 모드 활성화\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const adminMode = urlParams.get('admin');\r\n    \r\n    // 방법 3: 환경 변수 기반 (빌드 시 설정)\r\n    const envAdmin = process.env.REACT_APP_ADMIN_MODE === 'true';\r\n    \r\n    // 방법 4: 로컬 스토리지 기반 (개발자 도구에서 설정 가능)\r\n    const localStorageAdmin = localStorage.getItem('admin_mode') === 'true';\r\n    \r\n    // 방법 5: 특정 도메인에서만 관리자 권한 부여\r\n    const allowedDomains = ['localhost', '127.0.0.1', 'your-admin-domain.com'];\r\n    const currentDomain = window.location.hostname;\r\n    \r\n    return allowedIPs.includes(currentIP) || \r\n           adminMode === 'true' || \r\n           envAdmin || \r\n           localStorageAdmin ||\r\n           allowedDomains.includes(currentDomain);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <AppContainer>\r\n        <Header \r\n          onAddProperty={() => setIsAddPropertyModalOpen(true)}\r\n          searchTerm={searchTerm}\r\n          onSearchChange={setSearchTerm}\r\n          addressSearch={addressSearch}\r\n          onAddressSearchChange={setAddressSearch}\r\n          filters={filters}\r\n          onFilterChange={setFilters}\r\n          isAdmin={isAdmin()}\r\n        />\r\n        <MainContent>\r\n          <HomePage \r\n            searchTerm={searchTerm}\r\n            addressSearch={addressSearch}\r\n            filters={filters}\r\n          />\r\n        </MainContent>\r\n      </AppContainer>\r\n      \r\n      {isAddPropertyModalOpen && (\r\n        <AddPropertyModal \r\n          onClose={() => setIsAddPropertyModalOpen(false)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}