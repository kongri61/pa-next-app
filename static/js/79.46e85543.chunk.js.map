{"version":3,"file":"static/js/79.46e85543.chunk.js","mappings":"0KAeO,MAsEMA,EAAiBA,IACrBC,EAAAA,GAAKC,W","sources":["firebase/authService.ts"],"sourcesContent":["import { \r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n  User,\r\n  updateProfile,\r\n  sendPasswordResetEmail,\r\n  updatePassword,\r\n  reauthenticateWithCredential,\r\n  EmailAuthProvider\r\n} from 'firebase/auth';\r\nimport { auth } from './config';\r\n\r\n// 사용자 회원가입\r\nexport const signUp = async (email: string, password: string, displayName?: string): Promise<User> => {\r\n  try {\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    const user = userCredential.user;\r\n\r\n    // 프로필 업데이트 (이름 설정)\r\n    if (displayName) {\r\n      await updateProfile(user, { displayName });\r\n    }\r\n\r\n    return user;\r\n  } catch (error: any) {\r\n    console.error('회원가입 오류:', error);\r\n    let errorMessage = '회원가입 중 오류가 발생했습니다.';\r\n    \r\n    switch (error.code) {\r\n      case 'auth/email-already-in-use':\r\n        errorMessage = '이미 사용 중인 이메일입니다.';\r\n        break;\r\n      case 'auth/weak-password':\r\n        errorMessage = '비밀번호가 너무 약합니다.';\r\n        break;\r\n      case 'auth/invalid-email':\r\n        errorMessage = '유효하지 않은 이메일입니다.';\r\n        break;\r\n    }\r\n    \r\n    throw new Error(errorMessage);\r\n  }\r\n};\r\n\r\n// 사용자 로그인\r\nexport const signIn = async (email: string, password: string): Promise<User> => {\r\n  try {\r\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n    return userCredential.user;\r\n  } catch (error: any) {\r\n    console.error('로그인 오류:', error);\r\n    let errorMessage = '로그인 중 오류가 발생했습니다.';\r\n    \r\n    switch (error.code) {\r\n      case 'auth/user-not-found':\r\n        errorMessage = '등록되지 않은 이메일입니다.';\r\n        break;\r\n      case 'auth/wrong-password':\r\n        errorMessage = '비밀번호가 올바르지 않습니다.';\r\n        break;\r\n      case 'auth/invalid-email':\r\n        errorMessage = '유효하지 않은 이메일입니다.';\r\n        break;\r\n      case 'auth/user-disabled':\r\n        errorMessage = '비활성화된 계정입니다.';\r\n        break;\r\n    }\r\n    \r\n    throw new Error(errorMessage);\r\n  }\r\n};\r\n\r\n// 사용자 로그아웃\r\nexport const signOutUser = async (): Promise<void> => {\r\n  try {\r\n    await signOut(auth);\r\n  } catch (error) {\r\n    console.error('로그아웃 오류:', error);\r\n    throw new Error('로그아웃 중 오류가 발생했습니다.');\r\n  }\r\n};\r\n\r\n// 현재 사용자 가져오기\r\nexport const getCurrentUser = (): User | null => {\r\n  return auth.currentUser;\r\n};\r\n\r\n// 인증 상태 변경 감지\r\nexport const onAuthStateChange = (callback: (user: User | null) => void) => {\r\n  return onAuthStateChanged(auth, callback);\r\n};\r\n\r\n// 비밀번호 재설정 이메일 발송\r\nexport const resetPassword = async (email: string): Promise<void> => {\r\n  try {\r\n    await sendPasswordResetEmail(auth, email);\r\n  } catch (error: any) {\r\n    console.error('비밀번호 재설정 오류:', error);\r\n    let errorMessage = '비밀번호 재설정 이메일 발송 중 오류가 발생했습니다.';\r\n    \r\n    switch (error.code) {\r\n      case 'auth/user-not-found':\r\n        errorMessage = '등록되지 않은 이메일입니다.';\r\n        break;\r\n      case 'auth/invalid-email':\r\n        errorMessage = '유효하지 않은 이메일입니다.';\r\n        break;\r\n    }\r\n    \r\n    throw new Error(errorMessage);\r\n  }\r\n};\r\n\r\n// 비밀번호 변경\r\nexport const changePassword = async (currentPassword: string, newPassword: string): Promise<void> => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user || !user.email) {\r\n      throw new Error('로그인된 사용자가 없습니다.');\r\n    }\r\n\r\n    // 현재 비밀번호로 재인증\r\n    const credential = EmailAuthProvider.credential(user.email, currentPassword);\r\n    await reauthenticateWithCredential(user, credential);\r\n\r\n    // 새 비밀번호로 변경\r\n    await updatePassword(user, newPassword);\r\n  } catch (error: any) {\r\n    console.error('비밀번호 변경 오류:', error);\r\n    let errorMessage = '비밀번호 변경 중 오류가 발생했습니다.';\r\n    \r\n    switch (error.code) {\r\n      case 'auth/wrong-password':\r\n        errorMessage = '현재 비밀번호가 올바르지 않습니다.';\r\n        break;\r\n      case 'auth/weak-password':\r\n        errorMessage = '새 비밀번호가 너무 약합니다.';\r\n        break;\r\n      case 'auth/requires-recent-login':\r\n        errorMessage = '보안을 위해 다시 로그인해주세요.';\r\n        break;\r\n    }\r\n    \r\n    throw new Error(errorMessage);\r\n  }\r\n};\r\n\r\n// 프로필 업데이트\r\nexport const updateUserProfile = async (displayName?: string, photoURL?: string): Promise<void> => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('로그인된 사용자가 없습니다.');\r\n    }\r\n\r\n    await updateProfile(user, { displayName, photoURL });\r\n  } catch (error) {\r\n    console.error('프로필 업데이트 오류:', error);\r\n    throw new Error('프로필 업데이트 중 오류가 발생했습니다.');\r\n  }\r\n}; "],"names":["getCurrentUser","auth","currentUser"],"sourceRoot":""}